@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider Auth

@code {
    [Parameter]
    public bool IsAuthenticated { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var currentPath = NavigationManager.ToBaseRelativePath(NavigationManager.Uri).ToLower();
        if (currentPath.StartsWith("admin-setup") || currentPath.StartsWith("login"))
        {
            return;
        }

        // 새로고침/리다이렉션 직후 인증 전파 지연을 고려해 실제 상태를 한 번 더 확인
        var state = await Auth.GetAuthenticationStateAsync();
        var effectiveAuth = IsAuthenticated || (state?.User?.Identity?.IsAuthenticated == true);

        if (!effectiveAuth)
        {
            var redirectUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
            if (!string.IsNullOrEmpty(redirectUrl))
            {
                NavigationManager.NavigateTo($"Login?redirectUrl={Uri.EscapeDataString(redirectUrl)}");
            }
            else
            {
                NavigationManager.NavigateTo("Login");
            }
        }
        else
        {
            // 인증된 상태에서 접근 금지 페이지로 온 경우만 처리하고, 불필요한 루프 방지
            if (currentPath == string.Empty || currentPath == "/")
            {
                return;
            }
            NavigationManager.NavigateTo("/");
        }
    }
}
