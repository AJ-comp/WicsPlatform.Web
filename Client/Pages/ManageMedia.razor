@page "/manage-media"
@attribute [Authorize]
@using WicsPlatform.Client.Dialogs
@using Microsoft.AspNetCore.Components.Forms
@using System.IO

<PageTitle>미디어 관리</PageTitle>

<RadzenStack>
    <!-- 페이지 헤더 -->
    <RadzenRow AlignItems="AlignItems.Center" Class="page-header mb-3">
        <RadzenColumn Size="12">
            <RadzenText Text="미디어 관리" TextStyle="TextStyle.H5" TagName="TagName.H1" class="page-title" />
            <RadzenText Text="오디오 파일을 업로드하고 플레이리스트를 관리합니다" TextStyle="TextStyle.Caption" class="page-subtitle" />
        </RadzenColumn>
    </RadzenRow>

    <!-- 파일 업로드 영역 -->
    <RadzenRow class="mb-3">
        <RadzenColumn SizeMD="12">
            <RadzenCard class="upload-zone-card">
                <InputFile OnChange="@OnInputFileChange"
                           multiple
                           id="fileInput"
                           accept="audio/*"
                           @key="@fileInputKey"
                           style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; cursor: pointer; z-index: 1;" />

                <div @ondragenter="@OnDragEnter" @ondragleave="@OnDragLeave" @ondragover:preventDefault @ondrop="@OnDrop"
                     class="upload-area">
                    <div class="upload-content">
                        <RadzenIcon Icon="cloud_upload" class="upload-icon" />
                        <RadzenText TextStyle="TextStyle.Body2" class="upload-title">
                            파일을 끌어다 놓거나 클릭하여 업로드하세요
                        </RadzenText>
                        <RadzenText TextStyle="TextStyle.Caption" class="upload-subtitle">
                            지원 형식: MP3, WAV, OGG, FLAC (최대 100MB)
                        </RadzenText>
                        <RadzenButton Click="@(() => ClickFileInput())" class="upload-button" Text="파일 선택"
                                      Icon="file_upload" Size="ButtonSize.Small" />
                    </div>
                </div>

                @if (isDraggingOver)
                {
                    <div class="drag-overlay">
                        <RadzenIcon Icon="file_download" class="drag-icon" />
                        <RadzenText TextStyle="TextStyle.Body1" class="drag-text">
                            파일을 여기에 놓으세요
                        </RadzenText>
                    </div>
                }

                @if (isUploading)
                {
                    <div class="upload-progress-overlay">
                        <div class="progress-content">
                            <RadzenText TextStyle="TextStyle.Body2" class="progress-title">
                                파일 업로드 중...
                            </RadzenText>
                            <RadzenProgressBar Value="@uploadProgress" ShowValue="true" ProgressBarStyle="ProgressBarStyle.Primary"
                                               Style="width: 200px; height: 6px;" Max="100" />
                            <RadzenText TextStyle="TextStyle.Caption" class="progress-info">
                                @uploadingFileName (@uploadProgress%)
                            </RadzenText>
                        </div>
                    </div>
                }
            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>

    <RadzenRow Gap="0.75rem">
        <!-- 좌측: 플레이리스트 -->
        <RadzenColumn Size="12" SizeLG="4">
            <RadzenCard class="playlist-panel">
                <RadzenStack Gap="0.75rem">
                    <RadzenRow AlignItems="AlignItems.Center" class="section-header">
                        <RadzenColumn Size="7">
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                <RadzenIcon Icon="queue_music" class="section-icon" />
                                <RadzenText TextStyle="TextStyle.Body1" TagName="TagName.H3" class="section-title">
                                    플레이리스트
                                </RadzenText>
                            </RadzenStack>
                        </RadzenColumn>
                        <RadzenColumn Size="5" class="text-end">
                            <RadzenButton Icon="add" Text="추가" Click="@OpenAddPlaylistDialog"
                                          ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Small" class="compact-button" />
                        </RadzenColumn>
                    </RadzenRow>

                    @if (isLoadingPlaylists)
                    {
                        <div class="loading-container">
                            <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" class="slim-progress" />
                            <RadzenText TextStyle="TextStyle.Caption" class="loading-text">플레이리스트를 불러오는 중...</RadzenText>
                        </div>
                    }
                    else if (!playlists.Any())
                    {
                        <div class="empty-state">
                            <RadzenIcon Icon="folder_off" class="empty-icon" />
                            <RadzenText Text="플레이리스트가 없습니다" TextStyle="TextStyle.Caption" class="empty-text" />
                            <RadzenText Text="플레이리스트 추가 버튼을 클릭하여 새 플레이리스트를 만드세요" TextStyle="TextStyle.Caption" class="empty-subtext" />
                        </div>
                    }
                    else
                    {
                        <RadzenStack Gap="0.35rem" class="playlists-container">
                            @foreach (var playlist in playlists)
                            {
                                var isExpanded = expandedPlaylists.Contains(playlist.Id);
                                var playlistMediaCount = GetMediaCountInPlaylist(playlist.Id);
                                var playlistCardClass = $"playlist-card compact {(selectedPlaylists?.Any(p => p.Id == playlist.Id) == true ? "selected" : "")} {(isDraggingOverPlaylist == playlist.Id ? "drag-over" : "")}";

                                <div class="playlist-drop-zone" data-playlist-id="@playlist.Id">
                                    <RadzenCard class="@playlistCardClass">
                                        <RadzenStack Gap="0.35rem">
                                            <RadzenRow AlignItems="AlignItems.Center">
                                                <RadzenColumn Size="8" @onclick="@(() => TogglePlaylistExpansion(playlist.Id))">
                                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                                                        <RadzenButton Icon="@(isExpanded ? "expand_more" : "chevron_right")"
                                                                      ButtonStyle="ButtonStyle.Light"
                                                                      Variant="Variant.Flat"
                                                                      Size="ButtonSize.Small"
                                                                      class="expand-button"
                                                                      @onclick:stopPropagation="true" />
                                                        <RadzenIcon Icon="@(isExpanded ? "folder_open" : "folder")" class="playlist-icon" />
                                                        <RadzenText TextStyle="TextStyle.Caption" class="playlist-name">@playlist.Name</RadzenText>
                                                    </RadzenStack>
                                                </RadzenColumn>
                                                <RadzenColumn Size="4" class="text-end">
                                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.15rem">
                                                        <RadzenBadge BadgeStyle="BadgeStyle.Light" IsPill="true" Text="@playlistMediaCount.ToString()" class="count-badge" />
                                                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                                      Click="@(() => OpenEditPlaylistDialog(playlist))" Title="플레이리스트 수정"
                                                                      class="icon-button"
                                                                      @onclick:stopPropagation="true" />
                                                        <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                                      Click="@(() => OpenDeletePlaylistDialog(playlist))" Title="플레이리스트 삭제"
                                                                      class="icon-button delete"
                                                                      @onclick:stopPropagation="true" />
                                                    </RadzenStack>
                                                </RadzenColumn>
                                            </RadzenRow>

                                            @if (isExpanded && playlistMediaCount > 0)
                                            {
                                                <RadzenRow>
                                                    <RadzenColumn Size="12">
                                                        <RadzenCard class="playlist-media-list">
                                                            @{
                                                                var mediaInPlaylist = GetMediaInPlaylistSync(playlist.Id);
                                                            }
                                                            @if (mediaInPlaylist.Any())
                                                            {
                                                                <RadzenStack Gap="0.15rem" class="media-list">
                                                                    @foreach (var media in mediaInPlaylist)
                                                                    {
                                                                        <RadzenRow AlignItems="AlignItems.Center" class="media-item">
                                                                            <RadzenColumn Size="1">
                                                                                <RadzenIcon Icon="audio_file" class="item-icon" />
                                                                            </RadzenColumn>
                                                                            <RadzenColumn Size="7">
                                                                                <RadzenText TextStyle="TextStyle.Caption" class="item-text">@media.FileName</RadzenText>
                                                                            </RadzenColumn>
                                                                            <RadzenColumn Size="2" class="text-end">
                                                                                <RadzenText TextStyle="TextStyle.Caption" class="item-date">
                                                                                    @media.CreatedAt.ToString("MM-dd")
                                                                                </RadzenText>
                                                                            </RadzenColumn>
                                                                            <RadzenColumn Size="2" class="text-end">
                                                                                <RadzenButton Icon="clear"
                                                                                              ButtonStyle="ButtonStyle.Light"
                                                                                              Variant="Variant.Flat"
                                                                                              Size="ButtonSize.Small"
                                                                                              class="remove-button"
                                                                                              Title="플레이리스트에서 제거"
                                                                                              Click="@(() => OpenRemoveMediaFromPlaylistDialog(media, playlist))"
                                                                                              @onclick:stopPropagation="true" />
                                                                            </RadzenColumn>
                                                                        </RadzenRow>
                                                                    }
                                                                </RadzenStack>
                                                            }
                                                        </RadzenCard>
                                                    </RadzenColumn>
                                                </RadzenRow>
                                            }
                                        </RadzenStack>
                                    </RadzenCard>
                                </div>
                            }
                        </RadzenStack>
                    }
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>

        <!-- 우측: 미디어 파일 목록 -->
        <RadzenColumn Size="12" SizeLG="8">
            <RadzenCard class="media-panel">
                <RadzenStack Gap="0.75rem">
                    <!-- 검색 필터 -->
                    <RadzenCard class="filter-card">
                        <RadzenStack Gap="0.5rem">
                            <RadzenRow AlignItems="AlignItems.Center">
                                <RadzenColumn Size="12">
                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                        <RadzenIcon Icon="filter_list" class="filter-icon" />
                                        <RadzenText TextStyle="TextStyle.Caption" class="filter-title">검색 필터</RadzenText>
                                    </RadzenStack>
                                </RadzenColumn>
                            </RadzenRow>
                            <RadzenRow Gap="0.35rem">
                                <RadzenColumn Size="6" SizeMD="4">
                                    <RadzenTextBox @bind-Value="@mediaNameFilter" Placeholder="파일명" Change="@ApplyFilters" class="filter-input" />
                                </RadzenColumn>
                                <RadzenColumn Size="6" SizeMD="4">
                                    <RadzenDropDown @bind-Value="@playlistFilter"
                                                    Data="@playlists"
                                                    TextProperty="Name"
                                                    ValueProperty="Id"
                                                    AllowClear="true"
                                                    AllowFiltering="true"
                                                    Placeholder="플레이리스트 선택"
                                                    Change="@ApplyFilters"
                                                    class="filter-dropdown"
                                                    TValue="ulong?" />
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="4" Class="text-end">
                                    <RadzenButton Text="필터 초기화" Click="@ResetFilters"
                                                  ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                  class="reset-button" />
                                </RadzenColumn>
                            </RadzenRow>
                        </RadzenStack>
                    </RadzenCard>

                    <!-- 선택된 미디어 수 표시 -->
                    @if (selectedMedia.Any())
                    {
                        <RadzenCard class="selection-info-card">
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                <RadzenText TextStyle="TextStyle.Caption" class="selection-text">
                                    <RadzenIcon Icon="check_circle" class="selection-icon" />
                                    @(selectedMedia.Count())개의 미디어가 선택되었습니다
                                </RadzenText>
                                <RadzenButton Text="선택 해제" Icon="clear" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Small"
                                              Click="@ClearSelection" class="clear-button" />
                            </RadzenStack>
                        </RadzenCard>
                    }

                    <!-- 미디어 목록 -->
                    @if (isLoading)
                    {
                        <div class="loading-container">
                            <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" class="slim-progress" />
                            <RadzenText Text="미디어 목록을 불러오는 중입니다..." TextStyle="TextStyle.Caption" class="loading-text" />
                        </div>
                    }
                    else if (!media.Any())
                    {
                        <div class="empty-state">
                            <RadzenIcon Icon="audio_file" class="empty-icon" />
                            <RadzenText Text="미디어 파일이 없습니다." TextStyle="TextStyle.Caption" class="empty-text" />
                            <RadzenText Text="파일을 드래그하거나 '파일 선택' 버튼을 클릭하여 업로드하세요." TextStyle="TextStyle.Caption" class="empty-subtext" />
                        </div>
                    }
                    else
                    {
                        <RadzenStack Gap="0.5rem" class="media-container">
                            @foreach (var mediaFile in media)
                            {
                                var mediaCardClass = $"media-card compact {(IsMediaSelected(mediaFile) ? "selected" : "")} {(isDragging && IsMediaSelected(mediaFile) ? "dragging" : "")}";

                                <RadzenCard class="@mediaCardClass"
                                            @onclick="@(() => ToggleMediaSelection(mediaFile))"
                                            draggable="@(IsMediaSelected(mediaFile) ? "true" : "false")"
                                            data-media-id="@mediaFile.Id">
                                    <RadzenRow AlignItems="AlignItems.Center" Gap="0.35rem">
                                        <RadzenColumn Size="1">
                                            <RadzenCheckBox Value="@IsMediaSelected(mediaFile)"
                                                            Change="@((bool value) => MediaSelectionChanged(value, mediaFile))"
                                                            @onclick:stopPropagation="true"
                                                            class="media-checkbox" />
                                        </RadzenColumn>
                                        <RadzenColumn Size="8" SizeMD="8">
                                            <RadzenStack Gap="0.15rem">
                                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.35rem">
                                                    <RadzenIcon Icon="audio_file" class="media-main-icon" />
                                                    <RadzenText TextStyle="TextStyle.Caption" class="media-name">@mediaFile.FileName</RadzenText>
                                                </RadzenStack>
                                                <RadzenStack Orientation="Orientation.Horizontal" Gap="0.75rem" class="media-meta">
                                                    <span class="meta-item"><RadzenIcon Icon="calendar_today" class="meta-icon" /> @mediaFile.CreatedAt.ToString("yyyy-MM-dd")</span>
                                                    @if (mediaFile.MapMediaGroups != null && mediaFile.MapMediaGroups.Any(mg => mg.Group != null))
                                                    {
                                                        <span class="meta-item"><RadzenIcon Icon="playlist_play" class="meta-icon" /> @string.Join(", ", mediaFile.MapMediaGroups.Where(mg => mg.Group != null).Select(mg => mg.Group.Name))</span>
                                                    }
                                                </RadzenStack>
                                            </RadzenStack>
                                        </RadzenColumn>
                                        <RadzenColumn Size="3" SizeMD="3" class="text-end">
                                            <RadzenButton Icon="play_arrow" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                          Click="@(() => PlayMedia(mediaFile))"
                                                          class="action-button play"
                                                          @onclick:stopPropagation="true" />
                                            <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                          Click="@(() => OpenEditMediaDialog(mediaFile))"
                                                          class="action-button"
                                                          @onclick:stopPropagation="true" />
                                            <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                          Click="@(() => OpenDeleteMediaDialog(mediaFile))"
                                                          class="action-button delete"
                                                          @onclick:stopPropagation="true" />
                                        </RadzenColumn>
                                    </RadzenRow>
                                </RadzenCard>
                            }
                        </RadzenStack>
                    }
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>
</RadzenStack>

<style>
    /* 전문적이고 고급스러운 디자인 시스템 */
    :root {
        --professional-primary: #2c3e50;
        --professional-secondary: #34495e;
        --professional-accent: #3498db;
        --professional-success: #27ae60;
        --professional-danger: #e74c3c;
        --professional-warning: #f39c12;
        --professional-border: #dde2e6;
        --professional-hover: #ecf0f1;
        --professional-selected: #e8f4fd;
    }

    /* 페이지 헤더 */
    .page-header {
        border-bottom: 1px solid var(--professional-border);
        padding-bottom: 0.75rem;
        margin-bottom: 1rem;
    }

    .page-title {
        font-size: 1.25rem !important;
        font-weight: 600 !important;
        color: var(--professional-primary) !important;
        margin: 0 !important;
        letter-spacing: -0.5px;
    }

    .page-subtitle {
        font-size: 0.75rem !important;
        color: #6c757d !important;
        margin-top: 0.25rem !important;
        font-weight: 400;
    }

    /* 업로드 영역 */
    .upload-zone-card {
        border: 2px dashed #d0d7de !important;
        background: #fafbfc !important;
        min-height: 80px !important;
        position: relative;
        transition: all 0.2s ease;
        border-radius: 6px !important;
    }

        .upload-zone-card:hover {
            border-color: var(--professional-accent) !important;
            background: var(--professional-hover) !important;
        }

    .upload-area {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .upload-content {
        text-align: center;
        padding: 1.5rem;
    }

    .upload-icon {
        font-size: 2rem !important;
        color: var(--professional-accent) !important;
        margin-bottom: 0.5rem;
    }

    .upload-title {
        font-size: 0.8rem !important;
        font-weight: 500 !important;
        color: var(--professional-primary) !important;
        margin: 0.25rem 0 !important;
    }

    .upload-subtitle {
        font-size: 0.7rem !important;
        color: #6c757d !important;
        margin: 0.25rem 0 0.75rem 0 !important;
    }

    .upload-button {
        font-size: 0.75rem !important;
        padding: 0.35rem 0.75rem !important;
        background: var(--professional-accent) !important;
        border-color: var(--professional-accent) !important;
        font-weight: 500 !important;
    }

        .upload-button:hover {
            background: #2980b9 !important;
            border-color: #2980b9 !important;
        }

    /* 드래그 오버레이 */
    .drag-overlay, .upload-progress-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(52, 152, 219, 0.95);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 10;
        border-radius: 6px;
    }

    .upload-progress-overlay {
        background: rgba(44, 62, 80, 0.95);
    }

    .drag-icon {
        font-size: 2.5rem !important;
        color: white !important;
        margin-bottom: 0.5rem;
    }

    .drag-text {
        font-size: 0.875rem !important;
        color: white !important;
        font-weight: 500;
    }

    .progress-content {
        text-align: center;
    }

    .progress-title {
        font-size: 0.8rem !important;
        color: white !important;
        margin-bottom: 0.5rem !important;
    }

    .progress-info {
        font-size: 0.7rem !important;
        color: rgba(255, 255, 255, 0.8) !important;
        margin-top: 0.5rem !important;
    }

    /* 섹션 헤더 */
    .section-header {
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #f0f0f0;
        margin-bottom: 0.5rem;
    }

    .section-icon {
        font-size: 1rem !important;
        color: var(--professional-accent) !important;
    }

    .section-title {
        font-size: 0.875rem !important;
        font-weight: 600 !important;
        color: var(--professional-primary) !important;
        margin: 0 !important;
    }

    /* 패널 스타일 */
    .playlist-panel, .media-panel {
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05) !important;
        border: 1px solid var(--professional-border) !important;
        border-radius: 6px !important;
        background: var(--rz-base-background-color)!important;
        min-height: calc(100vh - 240px);
    }

    /* 필터 카드 */
    .filter-card {
        background: #fafbfc !important;
        border: 1px solid #e1e4e8 !important;
        padding: 0.65rem !important;
        border-radius: 4px !important;
    }

    .filter-icon {
        font-size: 0.875rem !important;
        color: #6c757d !important;
    }

    .filter-title {
        font-size: 0.75rem !important;
        font-weight: 600 !important;
        color: var(--professional-secondary) !important;
        margin: 0 !important;
    }

    .filter-input, .filter-dropdown {
        font-size: 0.75rem !important;
        height: 32px !important;
        border-color: #d0d7de !important;
    }

        .filter-input input, .filter-dropdown input {
            font-size: 0.75rem !important;
            padding: 0.35rem 0.5rem !important;
        }

    .reset-button {
        font-size: 0.7rem !important;
        padding: 0.25rem 0.5rem !important;
        height: 28px !important;
    }

    /* 플레이리스트 카드 */
    .playlist-card.compact {
        padding: 0.5rem !important;
        border: 1px solid #e1e4e8 !important;
        border-radius: 4px !important;
        transition: all 0.15s ease !important;
        background: var(--rz-base-background-color)!important;
        cursor: pointer;
    }

        .playlist-card.compact:hover {
            border-color: var(--professional-accent) !important;
            background: var(--professional-hover) !important;
        }

        .playlist-card.compact.selected {
            border-color: var(--professional-accent) !important;
            background: var(--professional-selected) !important;
        }

        .playlist-card.compact.drag-over {
            border-color: var(--professional-success) !important;
            background: #d4edda !important;
            transform: scale(1.01);
        }

    .playlist-icon {
        font-size: 0.875rem !important;
        color: var(--professional-accent) !important;
    }

    .playlist-name {
        font-size: 0.8rem !important;
        font-weight: 500 !important;
        color: var(--professional-primary) !important;
        margin: 0 !important;
    }

    /* 미디어 카드 */
    .media-card.compact {
        padding: 0.65rem !important;
        border: 1px solid #e1e4e8 !important;
        border-radius: 4px !important;
        transition: all 0.15s ease !important;
        background: var(--rz-base-background-color)!important;
        cursor: pointer;
    }

        .media-card.compact:hover {
            border-color: var(--professional-accent) !important;
            background: var(--professional-hover) !important;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05) !important;
        }

        .media-card.compact.selected {
            border-color: var(--professional-accent) !important;
            background: var(--professional-selected) !important;
        }

        .media-card.compact.dragging {
            opacity: 0.6;
            cursor: grabbing;
        }

    .media-checkbox {
        transform: scale(0.85);
    }

    .media-main-icon {
        font-size: 0.875rem !important;
        color: var(--professional-accent) !important;
    }

    .media-name {
        font-size: 0.8rem !important;
        font-weight: 500 !important;
        color: var(--professional-primary) !important;
        margin: 0 !important;
    }

    .media-meta {
        font-size: 0.7rem !important;
        color: #6c757d !important;
    }

    .meta-item {
        display: inline-flex;
        align-items: center;
        gap: 0.15rem;
    }

    .meta-icon {
        font-size: 0.75rem !important;
        opacity: 0.7;
    }

    /* 버튼 스타일 */
    .compact-button, .clear-button {
        font-size: 0.75rem !important;
        padding: 0.25rem 0.5rem !important;
        height: 28px !important;
        font-weight: 500 !important;
    }

    .expand-button {
        min-width: 20px !important;
        padding: 2px !important;
        height: 20px !important;
    }

        .expand-button .rz-button-icon {
            font-size: 0.875rem !important;
        }

    .icon-button, .action-button {
        min-width: 24px !important;
        padding: 4px !important;
        height: 24px !important;
        opacity: 0.7;
        transition: all 0.15s ease;
    }

        .icon-button:hover, .action-button:hover {
            opacity: 1;
            background: var(--professional-hover) !important;
        }

        .icon-button.delete:hover, .action-button.delete:hover {
            color: var(--professional-danger) !important;
            background: #fee !important;
        }

        .action-button.play:hover {
            color: white !important;
            background: var(--professional-success) !important;
        }

    .remove-button {
        min-width: 20px !important;
        padding: 2px !important;
        height: 20px !important;
        opacity: 0.6;
    }

        .remove-button:hover {
            opacity: 1;
            color: var(--professional-danger) !important;
        }

    /* 배지 스타일 */
    .count-badge {
        font-size: 0.65rem !important;
        padding: 2px 6px !important;
        font-weight: 500 !important;
        background: #f0f0f0 !important;
        color: var(--professional-secondary) !important;
    }

    /* 플레이리스트 내 미디어 목록 */
    .playlist-media-list {
        background: #f8f9fa !important;
        border: 1px solid #e1e4e8 !important;
        padding: 0.5rem !important;
        margin-top: 0.35rem;
        border-radius: 3px !important;
    }

    .media-list {
        max-height: 200px;
        overflow-y: auto;
    }

    .media-item {
        padding: 0.2rem 0;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        transition: background-color 0.15s ease;
    }

        .media-item:hover {
            background-color: rgba(0, 0, 0, 0.02);
            border-radius: 2px;
        }

        .media-item:last-child {
            border-bottom: none;
        }

    .item-icon {
        font-size: 0.7rem !important;
        color: #6c757d !important;
    }

    .item-text {
        font-size: 0.7rem !important;
        color: var(--professional-secondary) !important;
        margin: 0 !important;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .item-date {
        font-size: 0.65rem !important;
        color: #6c757d !important;
        margin: 0 !important;
    }

    /* 선택 정보 카드 */
    .selection-info-card {
        background: #e8f4fd !important;
        border: 1px solid #b8daff !important;
        padding: 0.5rem 0.75rem !important;
        border-radius: 4px !important;
    }

    .selection-text {
        font-size: 0.75rem !important;
        color: var(--professional-primary) !important;
        margin: 0 !important;
        display: flex;
        align-items: center;
        gap: 0.35rem;
    }

    .selection-icon {
        font-size: 0.875rem !important;
        color: var(--professional-accent) !important;
    }

    /* 로딩 상태 */
    .loading-container {
        text-align: center;
        padding: 2rem 0;
    }

    .slim-progress {
        width: 120px !important;
        height: 4px !important;
        margin: 0 auto !important;
    }

    .loading-text {
        margin-top: 0.75rem !important;
        font-size: 0.75rem !important;
        color: #6c757d !important;
    }

    /* 빈 상태 */
    .empty-state {
        text-align: center;
        padding: 2.5rem 0;
    }

    .empty-icon {
        width: 32px !important;
        height: 32px !important;
        font-size: 32px !important;
        color: #d0d7de !important;
        margin-bottom: 0.75rem;
    }

    .empty-text {
        font-size: 0.8rem !important;
        color: var(--professional-secondary) !important;
        margin: 0.5rem 0 0.25rem 0 !important;
    }

    .empty-subtext {
        font-size: 0.7rem !important;
        color: #6c757d !important;
        margin: 0 !important;
    }

    /* 컨테이너 스크롤 */
    .playlists-container {
        max-height: calc(100vh - 320px);
        overflow-y: auto;
        padding-right: 0.25rem;
    }

    .media-container {
        max-height: calc(100vh - 360px);
        overflow-y: auto;
        padding-right: 0.25rem;
    }

        /* 스크롤바 스타일링 */
        .playlists-container::-webkit-scrollbar,
        .media-container::-webkit-scrollbar,
        .media-list::-webkit-scrollbar {
            width: 5px;
        }

        .playlists-container::-webkit-scrollbar-track,
        .media-container::-webkit-scrollbar-track,
        .media-list::-webkit-scrollbar-track {
            background: #f0f0f0;
            border-radius: 3px;
        }

        .playlists-container::-webkit-scrollbar-thumb,
        .media-container::-webkit-scrollbar-thumb,
        .media-list::-webkit-scrollbar-thumb {
            background: #c0c0c0;
            border-radius: 3px;
        }

            .playlists-container::-webkit-scrollbar-thumb:hover,
            .media-container::-webkit-scrollbar-thumb:hover,
            .media-list::-webkit-scrollbar-thumb:hover {
                background: #a0a0a0;
            }

    /* 드래그 중 효과 */
    body.dragging {
        cursor: grabbing !important;
    }

        body.dragging .playlist-card:not(.drag-over) {
            opacity: 0.8;
        }

        body.dragging .playlist-card {
            border-style: dashed;
        }

    /* 드래그 가능 커서 */
    [draggable="true"] {
        cursor: grab;
    }

        [draggable="true"]:active {
            cursor: grabbing;
        }

    /* 다크 테마 지원 */
    :root[data-theme='dark'] .page-title {
        color: #e1e4e8 !important;
    }

    :root[data-theme='dark'] .page-subtitle,
    :root[data-theme='dark'] .filter-title,
    :root[data-theme='dark'] .playlist-name,
    :root[data-theme='dark'] .media-name,
    :root[data-theme='dark'] .item-text {
        color: #c9d1d9 !important;
    }

    :root[data-theme='dark'] .playlist-panel,
    :root[data-theme='dark'] .media-panel,
    :root[data-theme='dark'] .playlist-card.compact,
    :root[data-theme='dark'] .media-card.compact {
        background: #0d1117 !important;
        border-color: #30363d !important;
    }

    :root[data-theme='dark'] .upload-zone-card {
        background: #161b22 !important;
        border-color: #30363d !important;
    }

    :root[data-theme='dark'] .filter-card {
        background: #161b22 !important;
        border-color: #30363d !important;
    }

    :root[data-theme='dark'] .playlist-media-list {
        background: #161b22 !important;
        border-color: #30363d !important;
    }

    :root[data-theme='dark'] .selection-info-card {
        background: #1f2937 !important;
        border-color: #374151 !important;
    }

    :root[data-theme='dark'] .playlist-card.compact:hover,
    :root[data-theme='dark'] .media-card.compact:hover {
        background: #161b22 !important;
    }

    :root[data-theme='dark'] .playlist-card.compact.selected,
    :root[data-theme='dark'] .media-card.compact.selected {
        background: #1f2937 !important;
    }

    :root[data-theme='dark'] .upload-zone-card:hover {
        background: #1f2937 !important;
    }
</style>