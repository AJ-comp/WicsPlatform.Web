@page "/manage-media"
@attribute [Authorize]
@using WicsPlatform.Client.Dialogs
@using WicsPlatform.Client.Pages
@using Microsoft.AspNetCore.Components.Forms
@using System.IO

<PageTitle>미디어 관리</PageTitle>

<RadzenStack Gap="1.5rem">

    <!-- 탭: 음원 관리 / TTS 관리 -->
    <RadzenTabs @bind-SelectedIndex="selectedTabIndex">
        <Tabs>
        <RadzenTabsItem Text="음원 관리" Icon="audio_file">
            <!-- 파일 업로드 영역 -->
            <RadzenCard class="upload-zone-card">
                <InputFile OnChange="@OnInputFileChange"
                           multiple
                           id="fileInput"
                           accept="audio/*"
                           @key="@fileInputKey"
                           style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; cursor: pointer; z-index: 1;" />

                <div @ondragenter="@OnDragEnter" @ondragleave="@OnDragLeave" @ondragover:preventDefault @ondrop="@OnDrop"
                     class="upload-area">
                    <!-- Corner Decorations -->
                    <div class="upload-corner corner-tl"></div>
                    <div class="upload-corner corner-tr"></div>
                    <div class="upload-corner corner-bl"></div>
                    <div class="upload-corner corner-br"></div>

                    <RadzenStack Gap="0.5rem" Style="text-align: center; padding: 1.5rem;">
                        <RadzenIcon Icon="cloud_upload" Style="font-size: 2.5rem; color: var(--rz-primary); margin-bottom: 0.5rem;" class="upload-icon-animated" />
                        <RadzenText TextStyle="TextStyle.Body2" Style="font-weight: 500;">
                            파일을 끌어다 놓거나 클릭하여 업로드하세요
                        </RadzenText>
                        <RadzenText TextStyle="TextStyle.Caption" Style="opacity: 0.7;">
                            지원 형식: MP3, WAV, OGG, FLAC (최대 100MB)
                        </RadzenText>
                        <RadzenButton Click="@(() => ClickFileInput())" Text="파일 선택"
                                      Icon="file_upload" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" 
                                      Style="margin-top: 0.5rem;" />
                    </RadzenStack>
                </div>

                @if (isDraggingOver)
                {
                    <div class="drag-overlay">
                        <RadzenStack Gap="0.5rem" Style="align-items: center;">
                            <RadzenIcon Icon="file_download" Style="font-size: 3rem; color: white;" class="bounce-animation" />
                            <RadzenText TextStyle="TextStyle.H6" Style="color: white; font-weight: 500;">
                                파일을 여기에 놓으세요
                            </RadzenText>
                        </RadzenStack>
                    </div>
                }

                @if (isUploading)
                {
                    <div class="upload-progress-overlay">
                        <RadzenStack Gap="1rem" Style="align-items: center;">
                            <RadzenText TextStyle="TextStyle.Body2" Style="color: white;">
                                파일 업로드 중...
                            </RadzenText>
                            <RadzenProgressBar Value="@uploadProgress" ShowValue="true" ProgressBarStyle="ProgressBarStyle.Light"
                                               Style="width: 200px; height: 6px;" Max="100" />
                            <RadzenText TextStyle="TextStyle.Caption" Style="color: rgba(255, 255, 255, 0.8);">
                                @uploadingFileName (@uploadProgress%)
                            </RadzenText>
                        </RadzenStack>
                    </div>
                }
            </RadzenCard>

            <RadzenRow Gap="1rem">
                <!-- 좌측: 플레이리스트 -->
                <RadzenColumn Size="12" SizeLG="4">
                    <RadzenCard class="side-panel-card">
                        <RadzenStack Gap="1rem">
                            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center" class="panel-header">
                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                    <RadzenIcon Icon="queue_music" Style="font-size: 1.25rem; color: var(--rz-primary);" />
                                    <RadzenText TextStyle="TextStyle.H6" Style="font-weight: 600; margin: 0;">플레이리스트</RadzenText>
                                </RadzenStack>
                                <RadzenButton Icon="add" Text="추가" Click="@OpenAddPlaylistDialog"
                                              ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Small" />
                            </RadzenStack>

                            @if (isLoadingPlaylists)
                            {
                                <RadzenStack Gap="1rem" Style="align-items: center; padding: 2rem 0;">
                                    <RadzenProgressBarCircular ShowValue="false" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Small" />
                                    <RadzenText TextStyle="TextStyle.Caption">플레이리스트를 불러오는 중...</RadzenText>
                                </RadzenStack>
                            }
                            else if (!playlists.Any())
                            {
                                <RadzenStack Gap="1rem" Style="align-items: center; padding: 2rem 0;">
                                    <div class="empty-icon-wrapper">
                                        <RadzenIcon Icon="folder_off" Style="font-size: 1.5rem; opacity: 0.3;" />
                                    </div>
                                    <RadzenText TextStyle="TextStyle.Body2" Style="opacity: 0.7;">플레이리스트가 없습니다</RadzenText>
                                    <RadzenText TextStyle="TextStyle.Caption" Style="opacity: 0.5;">플레이리스트 추가 버튼을 클릭하여 새 플레이리스트를 만드세요</RadzenText>
                                </RadzenStack>
                            }
                            else
                            {
                                <RadzenStack Gap="0.5rem" class="playlists-scroll-container">
                                    @foreach (var playlist in playlists)
                                    {
                                        var isExpanded = expandedPlaylists.Contains(playlist.Id);
                                        var playlistMediaCount = GetMediaCountInPlaylist(playlist.Id);
                                        var playlistCardClass = $"playlist-item-card {(selectedPlaylists?.Any(p => p.Id == playlist.Id) == true ? "selected" : "")} {(isDraggingOverPlaylist == playlist.Id ? "drag-over" : "")}";

                                        <div class="playlist-drop-zone" data-playlist-id="@playlist.Id">
                                            <RadzenCard class="@playlistCardClass" @onclick="@(() => TogglePlaylistExpansion(playlist.Id))">
                                                <RadzenStack Gap="0.5rem">
                                                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center">
                                                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                                            <RadzenIcon Icon="@(isExpanded ? "expand_more" : "chevron_right")" Style="font-size: 1rem;" />
                                                            <RadzenIcon Icon="@(isExpanded ? "folder_open" : "folder")" Style="font-size: 1rem; color: var(--rz-primary);" />
                                                            <RadzenText TextStyle="TextStyle.Subtitle2" Style="font-weight: 500; margin: 0;">@playlist.Name</RadzenText>
                                                        </RadzenStack>
                                                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem" @onclick:stopPropagation="true">
                                                            <RadzenBadge BadgeStyle="BadgeStyle.Light" Text="@playlistMediaCount.ToString()" IsPill="true" />
                                                            <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                                          Click="@(() => OpenEditPlaylistDialog(playlist))" Title="플레이리스트 수정" />
                                                            <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                                          Click="@(() => OpenDeletePlaylistDialog(playlist))" Title="플레이리스트 삭제" 
                                                                          Style="color: var(--rz-danger);" />
                                                        </RadzenStack>
                                                    </RadzenStack>

                                                    @if (isExpanded && playlistMediaCount > 0)
                                                    {
                                                        <RadzenCard Variant="Variant.Outlined" Style="padding: 0.5rem; margin-top: 0.5rem;">
                                                            @{
                                                                var mediaInPlaylist = GetMediaInPlaylistSync(playlist.Id);
                                                            }
                                                            @if (mediaInPlaylist.Any())
                                                            {
                                                                <RadzenStack Gap="0.35rem" class="media-in-playlist-list">
                                                                    @foreach (var media in mediaInPlaylist)
                                                                    {
                                                                        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center" 
                                                                                   Style="padding: 0.35rem 0.5rem; border-bottom: 1px solid var(--rz-border-color);">
                                                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                                                                <RadzenIcon Icon="audio_file" Style="font-size: 0.875rem; opacity: 0.7;" />
                                                                                <RadzenText TextStyle="TextStyle.Caption" Style="margin: 0;">@media.FileName</RadzenText>
                                                                            </RadzenStack>
                                                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.35rem">
                                                                                <RadzenText TextStyle="TextStyle.Caption" Style="opacity: 0.6; font-size: 0.65rem;">@media.CreatedAt.ToString("MM-dd")</RadzenText>
                                                                                <RadzenButton Icon="clear" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                                                            Click="@(() => OpenRemoveMediaFromPlaylistDialog(media, playlist))" Title="플레이리스트에서 제거"
                                                                                            @onclick:stopPropagation="true" Style="min-width: 20px; height: 20px; padding: 2px;" />
                                                                            </RadzenStack>
                                                                        </RadzenStack>
                                                                    }
                                                                </RadzenStack>
                                                            }
                                                        </RadzenCard>
                                                    }
                                                </RadzenStack>
                                            </RadzenCard>
                                        </div>
                                    }
                                </RadzenStack>
                            }
                        </RadzenStack>
                    </RadzenCard>
                </RadzenColumn>

                <!-- 우측: 미디어 파일 목록 -->
                <RadzenColumn Size="12" SizeLG="8">
                    <RadzenCard class="main-panel-card">
                        <RadzenStack Gap="1rem">
                            <!-- 검색 필터 -->
                            <RadzenCard Variant="Variant.Outlined">
                                <RadzenStack Gap="0.75rem">
                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                        <RadzenIcon Icon="filter_list" Style="font-size: 1rem; opacity: 0.7;" />
                                        <RadzenText TextStyle="TextStyle.Subtitle2" Style="font-weight: 600;">검색 필터</RadzenText>
                                    </RadzenStack>
                                    <RadzenRow Gap="0.5rem">
                                        <RadzenColumn Size="6" SizeMD="4">
                                            <RadzenTextBox @bind-Value="@mediaNameFilter" Placeholder="파일명" Change="@ApplyFilters" Style="width: 100%;" />
                                        </RadzenColumn>
                                        <RadzenColumn Size="6" SizeMD="4">
                                            <RadzenDropDown @bind-Value="@playlistFilter" Data="@playlists" TextProperty="Name" ValueProperty="Id" 
                                                            AllowClear="true" AllowFiltering="true" Placeholder="플레이리스트 선택" 
                                                            Change="@ApplyFilters" TValue="ulong?" Style="width: 100%;" />
                                        </RadzenColumn>
                                        <RadzenColumn Size="12" SizeMD="4">
                                            <RadzenButton Text="필터 초기화" Icon="clear" Click="@ResetFilters"
                                                          ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" 
                                                          Size="ButtonSize.Small" Style="width: 100%;" />
                                        </RadzenColumn>
                                    </RadzenRow>
                                </RadzenStack>
                            </RadzenCard>

                            <!-- 선택 정보 -->
                            @if (selectedMedia.Any())
                            {
                                <RadzenAlert AlertStyle="AlertStyle.Info" Variant="Variant.Flat" Shade="Shade.Light" Style="padding: 0.75rem;">
                                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center">
                                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                            <RadzenIcon Icon="check_circle" />
                                            <RadzenText TextStyle="TextStyle.Body2">@selectedMedia.Count() 개의 미디어가 선택되었습니다</RadzenText>
                                        </RadzenStack>
                                        <RadzenButton Text="선택 해제" Icon="clear" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Small"
                                                    Click="@ClearSelection" />
                                    </RadzenStack>
                                </RadzenAlert>
                            }

                            <!-- 미디어 목록 -->
                            @if (isLoading)
                            {
                                <RadzenStack Gap="1rem" Style="align-items: center; padding: 3rem 0;">
                                    <RadzenProgressBarCircular ShowValue="false" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Medium" />
                                    <RadzenText TextStyle="TextStyle.Caption">미디어 목록을 불러오는 중입니다...</RadzenText>
                                </RadzenStack>
                            }
                            else if (!media.Any())
                            {
                                <RadzenStack Gap="1rem" Style="align-items: center; padding: 3rem 0;">
                                    <div class="empty-icon-wrapper">
                                        <RadzenIcon Icon="audio_file" Style="font-size: 2rem; opacity: 0.3;" />
                                    </div>
                                    <RadzenText TextStyle="TextStyle.Body2" Style="opacity: 0.7;">미디어 파일이 없습니다</RadzenText>
                                    <RadzenText TextStyle="TextStyle.Caption" Style="opacity: 0.5;">파일을 드래그하거나 '파일 선택' 버튼을 클릭하여 업로드하세요</RadzenText>
                                </RadzenStack>
                            }
                            else
                            {
                                <RadzenStack Gap="0.5rem" class="media-scroll-container">
                                    @foreach (var mediaFile in media)
                                    {
                                        var mediaCardClass = $"media-item-card {(IsMediaSelected(mediaFile) ? "selected" : "")} {(isDragging && IsMediaSelected(mediaFile) ? "dragging" : "")}";

                                        <RadzenCard class="@mediaCardClass"
                                                  @onclick="@(() => ToggleMediaSelection(mediaFile))"
                                                  draggable="@(IsMediaSelected(mediaFile) ? "true" : "false")"
                                                  data-media-id="@mediaFile.Id">
                                            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center">
                                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" Gap="0.75rem" Style="flex: 1;">
                                                    <RadzenCheckBox Value="@IsMediaSelected(mediaFile)" 
                                                                  Change="@((bool value) => MediaSelectionChanged(value, mediaFile))"
                                                                  @onclick:stopPropagation="true" />
                                                    <RadzenStack Gap="0.35rem" Style="flex: 1;">
                                                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                                            <RadzenIcon Icon="audio_file" Style="font-size: 1rem; color: var(--rz-primary);" />
                                                            <RadzenText TextStyle="TextStyle.Subtitle2" Style="font-weight: 500; margin: 0;">@mediaFile.FileName</RadzenText>
                                                        </RadzenStack>
                                                        <RadzenStack Orientation="Orientation.Horizontal" Gap="1rem" Wrap="FlexWrap.Wrap" Style="font-size: 0.8rem; opacity: 0.7;">
                                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                                                                <RadzenIcon Icon="calendar_today" Style="font-size: 0.875rem;" />
                                                                <span>@mediaFile.CreatedAt.ToString("yyyy-MM-dd")</span>
                                                            </RadzenStack>
                                                            @if (mediaFile.MapMediaGroups != null && mediaFile.MapMediaGroups.Any(mg => mg.Group != null))
                                                            {
                                                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                                                                    <RadzenIcon Icon="playlist_play" Style="font-size: 0.875rem;" />
                                                                    <span>@string.Join(", ", mediaFile.MapMediaGroups.Where(mg => mg.Group != null).Select(mg => mg.Group.Name))</span>
                                                                </RadzenStack>
                                                            }
                                                        </RadzenStack>
                                                    </RadzenStack>
                                                </RadzenStack>
                                                <RadzenStack Orientation="Orientation.Horizontal" Gap="0.25rem" @onclick:stopPropagation="true">
                                                    <RadzenButton Icon="play_arrow" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                                Click="@(() => PlayMedia(mediaFile))" />
                                                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                                Click="@(() => OpenEditMediaDialog(mediaFile))" />
                                                    <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                                Click="@(() => OpenDeleteMediaDialog(mediaFile))" Style="color: var(--rz-danger);" />
                                                </RadzenStack>
                                            </RadzenStack>
                                        </RadzenCard>
                                    }
                                </RadzenStack>
                            }
                        </RadzenStack>
                    </RadzenCard>
                </RadzenColumn>
            </RadzenRow>
        </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
</RadzenStack>

<style>
    /* Radzen 컴포넌트 기반 커스텀 스타일 */
    .page-header-card {
        background: linear-gradient(to bottom, var(--rz-base-background-color), var(--rz-panel-background-color)) !important;
        border-bottom: 2px solid var(--rz-border-color) !important;
    }

    .page-title {
        font-weight: 600 !important;
        letter-spacing: -0.5px;
        margin: 0 !important;
    }

    .page-subtitle {
        opacity: 0.7;
        margin: 0 !important;
    }

    .upload-zone-card {
        border: 2px dashed var(--rz-border-color) !important;
        background: var(--rz-panel-background-color) !important;
        min-height: 140px !important;
        position: relative;
        transition: all 0.3s ease;
        border-radius: var(--rz-border-radius) !important;
    }

    .upload-zone-card:hover {
        border-color: var(--rz-primary) !important;
        background: var(--rz-base-background-color) !important;
        border-style: dashed !important;
        box-shadow: 0 4px 12px rgba(var(--rz-primary-rgb, 52, 152, 219), 0.15) !important;
    }

    .upload-area {
        width: 100%;
        min-height: 140px;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
    }

    /* Corner Decorations */
    .upload-corner {
        position: absolute;
        width: 20px;
        height: 20px;
        border-style: solid;
        border-color: var(--rz-primary);
        opacity: 0.3;
        transition: all 0.3s ease;
    }

    .upload-zone-card:hover .upload-corner {
        opacity: 0.7;
        width: 24px;
        height: 24px;
    }

    .corner-tl {
        top: -2px;
        left: -2px;
        border-width: 2px 0 0 2px;
        border-radius: 6px 0 0 0;
    }

    .corner-tr {
        top: -2px;
        right: -2px;
        border-width: 2px 2px 0 0;
        border-radius: 0 6px 0 0;
    }

    .corner-bl {
        bottom: -2px;
        left: -2px;
        border-width: 0 0 2px 2px;
        border-radius: 0 0 0 6px;
    }

    .corner-br {
        bottom: -2px;
        right: -2px;
        border-width: 0 2px 2px 0;
        border-radius: 0 0 6px 0;
    }

    /* Upload Icon Animation */
    .upload-icon-animated {
        animation: float 3s ease-in-out infinite;
    }

    @@keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-10px); }
    }

    .upload-zone-card:hover .upload-icon-animated {
        animation: float 1.5s ease-in-out infinite, pulse 1.5s ease-in-out infinite;
    }

    @@keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.7; }
    }

    /* Bounce Animation for Drag Over */
    .bounce-animation {
        animation: bounce 0.6s ease infinite;
    }

    @@keyframes bounce {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-15px); }
    }

    .drag-overlay, .upload-progress-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(var(--rz-primary-rgb), 0.95);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10;
        border-radius: var(--rz-border-radius);
    }

    .upload-progress-overlay {
        background: rgba(0, 0, 0, 0.85);
    }

    .side-panel-card,
    .main-panel-card {
        min-height: calc(100vh - 280px);
    }

    .panel-header {
        padding-bottom: 0.75rem;
        border-bottom: 1px solid var(--rz-border-color);
    }

    .empty-icon-wrapper {
        width: 60px;
        height: 60px;
        border: 2px solid var(--rz-border-color);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    /* 플레이리스트/미디어 아이템 카드 */
    .playlist-item-card,
    .media-item-card {
        transition: all 0.2s ease;
        cursor: pointer;
    }

    .playlist-item-card:hover,
    .media-item-card:hover {
        border-color: var(--rz-primary) !important;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
    }

    .playlist-item-card.selected,
    .media-item-card.selected {
        border-color: var(--rz-primary) !important;
        background: var(--rz-panel-background-color) !important;
    }

    .playlist-item-card.drag-over {
        border-color: var(--rz-success) !important;
        background: var(--rz-success-lighter) !important;
        transform: scale(1.02);
    }

    .media-item-card.dragging {
        opacity: 0.5;
        cursor: grabbing;
    }

    /* 스크롤 컨테이너 */
    .playlists-scroll-container,
    .media-scroll-container {
        max-height: calc(100vh - 380px);
        overflow-y: auto;
    }

    .media-in-playlist-list {
        max-height: 250px;
        overflow-y: auto;
    }

    /* 스크롤바 스타일링 */
    .playlists-scroll-container::-webkit-scrollbar,
    .media-scroll-container::-webkit-scrollbar,
    .media-in-playlist-list::-webkit-scrollbar {
        width: 6px;
    }

    .playlists-scroll-container::-webkit-scrollbar-track,
    .media-scroll-container::-webkit-scrollbar-track,
    .media-in-playlist-list::-webkit-scrollbar-track {
        background: var(--rz-panel-background-color);
        border-radius: 3px;
    }

    .playlists-scroll-container::-webkit-scrollbar-thumb,
    .media-scroll-container::-webkit-scrollbar-thumb,
    .media-in-playlist-list::-webkit-scrollbar-thumb {
        background: var(--rz-border-color);
        border-radius: 3px;
    }

    .playlists-scroll-container::-webkit-scrollbar-thumb:hover,
    .media-scroll-container::-webkit-scrollbar-thumb:hover,
    .media-in-playlist-list::-webkit-scrollbar-thumb:hover {
        background: var(--rz-primary);
    }

    /* 드래그 가능 커서 */
    [draggable="true"] {
        cursor: grab;
    }

    [draggable="true"]:active {
        cursor: grabbing;
    }

    /* 다크 테마 최적화 */
    :root[data-theme='dark'] .page-header-card {
        background: linear-gradient(180deg, #181712, #141310) !important;
    }

    :root[data-theme='dark'] .upload-zone-card {
        background: linear-gradient(180deg, #1a1916, #141310) !important;
    }

    :root[data-theme='dark'] .upload-zone-card:hover {
        background: #161511 !important;
    }

    :root[data-theme='dark'] .playlist-item-card:hover,
    :root[data-theme='dark'] .media-item-card:hover {
        background: #161511 !important;
    }

    :root[data-theme='dark'] .playlist-item-card.selected,
    :root[data-theme='dark'] .media-item-card.selected {
        background: #1a1916 !important;
    }
</style>