@page "/manage-media"
@attribute [Authorize]
@using WicsPlatform.Client.Dialogs
@using Microsoft.AspNetCore.Components.Forms
@using System.IO

<PageTitle>미디어 관리</PageTitle>

<RadzenStack>
    <!-- 파일 업로드 영역 -->
    <RadzenRow>
        <RadzenColumn SizeMD="12" Class="file-drop-zone-container">
            <RadzenCard class="mb-4 rz-border-radius-4 rz-shadow-2 file-drop-zone"
                        Style="position: relative; min-height: 120px;">

                <InputFile OnChange="@OnInputFileChange"
                           multiple
                           id="fileInput"
                           accept="audio/*"
                           @key="@fileInputKey"
                           style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; cursor: pointer;" />

                <div @ondragenter="@OnDragEnter" @ondragleave="@OnDragLeave" @ondragover:preventDefault @ondrop="@OnDrop"
                     class="drag-drop-area">

                    <div class="text-center p-5">
                        <RadzenIcon Icon="cloud_upload" Style="width: 48px; height: 48px; font-size: 48px; color: var(--rz-secondary);" />
                        <RadzenText TextStyle="TextStyle.H6" class="mt-2 mb-0">
                            <strong>파일을 끌어다 놓거나 클릭하여 업로드하세요</strong>
                        </RadzenText>
                        <RadzenText TextStyle="TextStyle.Body2" class="text-secondary mt-1 mb-3">
                            오디오 파일(.mp3, .wav, .ogg, .flac)
                        </RadzenText>
                        <RadzenButton Click="@(() => ClickFileInput())" class="file-select-button" Text="파일 선택"
                                      Icon="file_upload" Style="min-width: 150px;" />
                    </div>
                </div>

                @if (isDraggingOver)
                {
                    <div class="drag-over-overlay">
                        <RadzenIcon Icon="file_download" Style="width: 64px; height: 64px; font-size: 64px; color: var(--rz-primary);" />
                        <RadzenText TextStyle="TextStyle.H5" class="mt-2 mb-0 text-white">
                            <strong>파일을 여기에 놓으세요</strong>
                        </RadzenText>
                    </div>
                }

                @if (isUploading)
                {
                    <div class="upload-progress-overlay">
                        <RadzenText TextStyle="TextStyle.H6" class="mb-3">
                            <strong>파일 업로드 중...</strong>
                        </RadzenText>
                        <RadzenProgressBar Value="@uploadProgress" ShowValue="true" ProgressBarStyle="ProgressBarStyle.Primary"
                                           Style="width: 70%; height: 12px;" Max="100" />
                        <RadzenText TextStyle="TextStyle.Body1" class="mt-3">
                            <span class="file-name">@uploadingFileName</span> (@uploadProgress% 완료)
                        </RadzenText>
                    </div>
                }
            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>

    <RadzenRow Gap="1rem">
        <!-- 좌측: 플레이리스트 그룹 -->
        <RadzenColumn Size="12" SizeLG="4">
            <RadzenCard class="h-100" Style="min-height: calc(100vh - 350px);">
                <RadzenStack Gap="1rem">
                    <RadzenRow AlignItems="AlignItems.Center">
                        <RadzenColumn Size="8">
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.75rem">
                                <RadzenIcon Icon="folder" Style="font-size: 1.75rem; color: var(--rz-primary);" />
                                <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H3" class="mb-0" Style="font-weight: 600;">
                                    플레이리스트
                                </RadzenText>
                            </RadzenStack>
                        </RadzenColumn>
                        <RadzenColumn Size="4" class="text-end">
                            <RadzenButton Icon="add" Text="추가" Click="@OpenAddPlaylistDialog"
                                          ButtonStyle="ButtonStyle.Secondary" Size="ButtonSize.Small" />
                        </RadzenColumn>
                    </RadzenRow>

                    @if (isLoadingPlaylists)
                    {
                        <div class="text-center py-5">
                            <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="width: 40%; height: 8px; margin: 0 auto;" />
                            <RadzenText TextStyle="TextStyle.Body1" class="mt-3 mb-0">플레이리스트 목록을 불러오는 중...</RadzenText>
                        </div>
                    }
                    else if (!playlists.Any())
                    {
                        <div class="text-center py-5">
                            <RadzenIcon Icon="folder_off" Style="width: 48px; height: 48px; font-size: 48px; color: var(--rz-text-disabled-color)" />
                            <RadzenText Text="플레이리스트가 없습니다" TextStyle="TextStyle.Body1" Style="margin: 1rem 0 0.5rem 0; opacity: 0.5" />
                            <RadzenText Text="플레이리스트 추가 버튼을 클릭하여 새 플레이리스트를 만드세요" TextStyle="TextStyle.Body2" Style="opacity: 0.5" />
                        </div>
                    }
                    else
                    {
                        <RadzenStack Gap="0.5rem" Style="max-height: calc(100vh - 450px); overflow-y: auto;">
                            @foreach (var playlist in playlists)
                            {
                                var isExpanded = expandedPlaylists.Contains(playlist.Id);
                                var playlistMediaCount = GetMediaCountInPlaylist(playlist.Id);
                                var playlistCardClass = $"playlist-card {(selectedPlaylists?.Any(p => p.Id == playlist.Id) == true ? "selected" : "")} {(isDraggingOverPlaylist == playlist.Id ? "drag-over" : "")}";

                                <div class="playlist-drop-zone" data-playlist-id="@playlist.Id">
                                    <RadzenCard class="@playlistCardClass"
                                                Style="cursor: pointer; transition: all 0.2s ease;">
                                        <RadzenStack Gap="0.5rem">
                                            <RadzenRow AlignItems="AlignItems.Center">
                                                <RadzenColumn Size="8" @onclick="@(() => TogglePlaylistExpansion(playlist.Id))">
                                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                                                        <RadzenButton Icon="@(isExpanded ? "expand_more" : "chevron_right")"
                                                                      ButtonStyle="ButtonStyle.Light"
                                                                      Variant="Variant.Flat"
                                                                      Size="ButtonSize.Small"
                                                                      Style="min-width: 24px; padding: 4px;"
                                                                      @onclick:stopPropagation="true" />
                                                        <RadzenIcon Icon="@(isExpanded ? "folder_open" : "folder")" />
                                                        <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0" Style="font-weight: 500;">@playlist.Name</RadzenText>
                                                    </RadzenStack>
                                                </RadzenColumn>
                                                <RadzenColumn Size="4" class="text-end">
                                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.25rem">
                                                        <RadzenBadge BadgeStyle="BadgeStyle.Info" IsPill="true" Text="@playlistMediaCount.ToString()" />
                                                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                                      Click="@(() => OpenEditPlaylistDialog(playlist))" Title="플레이리스트 수정"
                                                                      Style="min-width: 28px; padding: 4px;"
                                                                      @onclick:stopPropagation="true" />
                                                        <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Small"
                                                                      Click="@(() => OpenDeletePlaylistDialog(playlist))" Title="플레이리스트 삭제"
                                                                      Style="min-width: 28px; padding: 4px;"
                                                                      @onclick:stopPropagation="true" />
                                                    </RadzenStack>
                                                </RadzenColumn>
                                            </RadzenRow>

                                            @if (isExpanded && playlistMediaCount > 0)
                                            {
                                                <RadzenRow>
                                                    <RadzenColumn Size="12">
                                                        <RadzenCard class="playlist-media-list">
                                                            @{
                                                                var mediaInPlaylist = GetMediaInPlaylistSync(playlist.Id);
                                                            }
                                                            @if (mediaInPlaylist.Any())
                                                            {
                                                                <RadzenStack Gap="0.25rem" Style="max-height: 300px; overflow-y: auto;">
                                                                    @foreach (var media in mediaInPlaylist)
                                                                    {
                                                                        <RadzenRow AlignItems="AlignItems.Center" class="media-item">
                                                                            <RadzenColumn Size="1">
                                                                                <RadzenIcon Icon="audio_file" Style="font-size: 0.875rem;" />
                                                                            </RadzenColumn>
                                                                            <RadzenColumn Size="6">
                                                                                <RadzenText TextStyle="TextStyle.Body2" class="mb-0">@media.FileName</RadzenText>
                                                                            </RadzenColumn>
                                                                            <RadzenColumn Size="3" class="text-end">
                                                                                <RadzenText TextStyle="TextStyle.Caption" class="text-muted mb-0">
                                                                                    @media.CreatedAt.ToString("MM-dd")
                                                                                </RadzenText>
                                                                            </RadzenColumn>
                                                                            <RadzenColumn Size="2" class="text-end">
                                                                                <RadzenButton Icon="clear"
                                                                                              ButtonStyle="ButtonStyle.Danger"
                                                                                              Variant="Variant.Flat"
                                                                                              Size="ButtonSize.Small"
                                                                                              Style="min-width: 24px; padding: 4px;"
                                                                                              Title="플레이리스트에서 제거"
                                                                                              Click="@(() => OpenRemoveMediaFromPlaylistDialog(media, playlist))"
                                                                                              @onclick:stopPropagation="true" />
                                                                            </RadzenColumn>
                                                                        </RadzenRow>
                                                                    }
                                                                </RadzenStack>
                                                            }
                                                        </RadzenCard>
                                                    </RadzenColumn>
                                                </RadzenRow>
                                            }
                                        </RadzenStack>
                                    </RadzenCard>
                                </div>
                            }
                        </RadzenStack>
                    }
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>

        <!-- 우측: 미디어 파일 목록 -->
        <RadzenColumn Size="12" SizeLG="8">
            <RadzenCard class="h-100" Style="min-height: calc(100vh - 350px);">
                <RadzenStack Gap="1rem">
                    <!-- 검색 필터 -->
                    <RadzenCard class="filter-card">
                        <RadzenStack Gap="0.75rem">
                            <RadzenRow AlignItems="AlignItems.Center">
                                <RadzenColumn Size="8">
                                    <RadzenText TextStyle="TextStyle.Subtitle2" class="mb-0">검색 필터</RadzenText>
                                </RadzenColumn>
                            </RadzenRow>
                            <RadzenRow Gap="0.5rem">
                                <RadzenColumn Size="6" SizeMD="4">
                                    <RadzenTextBox @bind-Value="@mediaNameFilter" Placeholder="파일명" Change="@ApplyFilters" Style="width: 100%" />
                                </RadzenColumn>
                                <RadzenColumn Size="6" SizeMD="4">
                                    <RadzenDropDown @bind-Value="@playlistFilter"
                                                    Data="@playlists"
                                                    TextProperty="Name"
                                                    ValueProperty="Id"
                                                    AllowClear="true"
                                                    AllowFiltering="true"
                                                    Placeholder="플레이리스트 선택"
                                                    Change="@ApplyFilters"
                                                    Style="width: 100%"
                                                    TValue="ulong?" />
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="4" Class="text-end">
                                    <RadzenButton Text="필터 초기화" Click="@ResetFilters" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small" />
                                </RadzenColumn>
                            </RadzenRow>
                        </RadzenStack>
                    </RadzenCard>

                    <!-- 선택된 미디어 수 표시 -->
                    @if (selectedMedia.Any())
                    {
                        <RadzenCard class="selected-info-card">
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                <RadzenText TextStyle="TextStyle.Body2" class="mb-0">
                                    <RadzenIcon Icon="check_circle" Style="color: var(--rz-info);" />
                                    @(selectedMedia.Count())개의 미디어가 선택되었습니다
                                </RadzenText>
                                <RadzenButton Text="선택 해제" Icon="clear" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Small"
                                              Click="@ClearSelection" />
                            </RadzenStack>
                        </RadzenCard>
                    }

                    <!-- 미디어 목록 -->
                    @if (isLoading)
                    {
                        <div class="text-center py-5">
                            <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="width: 40%; height: 8px; margin: 0 auto;" />
                            <RadzenText Text="미디어 목록을 불러오는 중입니다..." TextStyle="TextStyle.Body1" class="mt-3 mb-0" />
                        </div>
                    }
                    else if (!media.Any())
                    {
                        <div class="text-center py-5">
                            <RadzenIcon Icon="audio_file" Style="width: 48px; height: 48px; font-size: 48px; color: var(--rz-text-disabled-color)" />
                            <RadzenText Text="미디어 파일이 없습니다." TextStyle="TextStyle.Body1" Style="margin: 1rem 0 0.5rem 0; opacity: 0.5" />
                            <RadzenText Text="파일을 드래그하거나 '파일 선택' 버튼을 클릭하여 업로드하세요." TextStyle="TextStyle.Body2" Style="opacity: 0.5" />
                        </div>
                    }
                    else
                    {
                        <RadzenStack Gap="0.75rem" Style="max-height: calc(100vh - 450px); overflow-y: auto;">
                            @foreach (var mediaFile in media)
                            {
                                var mediaCardClass = $"media-card {(IsMediaSelected(mediaFile) ? "selected" : "")} {(isDragging && IsMediaSelected(mediaFile) ? "dragging" : "")}";

                                <RadzenCard class="@mediaCardClass"
                                            Style="cursor: pointer;"
                                            @onclick="@(() => ToggleMediaSelection(mediaFile))"
                                            draggable="@(IsMediaSelected(mediaFile) ? "true" : "false")"
                                            data-media-id="@mediaFile.Id">
                                    <RadzenRow AlignItems="AlignItems.Center" Gap="0.5rem">
                                        <RadzenColumn Size="1">
                                            <RadzenCheckBox Value="@IsMediaSelected(mediaFile)"
                                                            Change="@((bool value) => MediaSelectionChanged(value, mediaFile))"
                                                            @onclick:stopPropagation="true" />
                                        </RadzenColumn>
                                        <RadzenColumn Size="8" SizeMD="8">
                                            <RadzenStack Gap="0.25rem">
                                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                                    <RadzenIcon Icon="audio_file" />
                                                    <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0" Style="font-weight: 500;">@mediaFile.FileName</RadzenText>
                                                </RadzenStack>
                                                <RadzenStack Orientation="Orientation.Horizontal" Gap="1rem" Style="font-size: 0.875rem; color: var(--rz-text-secondary-color);">
                                                    <span><RadzenIcon Icon="calendar_today" Style="font-size: 1rem;" /> @mediaFile.CreatedAt.ToString("yyyy-MM-dd")</span>
                                                    @if (mediaFile.MapMediaGroups != null && mediaFile.MapMediaGroups.Any(mg => mg.Group != null))
                                                    {
                                                        <span><RadzenIcon Icon="playlist_play" Style="font-size: 1rem;" /> @string.Join(", ", mediaFile.MapMediaGroups.Where(mg => mg.Group != null).Select(mg => mg.Group.Name))</span>
                                                    }
                                                </RadzenStack>
                                            </RadzenStack>
                                        </RadzenColumn>
                                        <RadzenColumn Size="3" SizeMD="3" class="text-end">
                                            <RadzenButton Icon="play_arrow" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                          Click="@(() => PlayMedia(mediaFile))"
                                                          @onclick:stopPropagation="true" />
                                            <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small"
                                                          Click="@(() => OpenEditMediaDialog(mediaFile))"
                                                          @onclick:stopPropagation="true" />
                                            <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Small"
                                                          Click="@(() => OpenDeleteMediaDialog(mediaFile))"
                                                          @onclick:stopPropagation="true" />
                                        </RadzenColumn>
                                    </RadzenRow>
                                </RadzenCard>
                            }
                        </RadzenStack>
                    }
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>
</RadzenStack>

<style>
    /* 파일 업로드 영역 스타일 */
    .file-drop-zone-container {
        transition: all 0.3s ease;
    }

    .file-drop-zone {
        transition: all 0.3s ease;
        border: 2px dashed var(--rz-secondary-light) !important;
    }

    .drag-drop-area {
        width: 100%;
        height: 100%;
    }

    .drag-over-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(var(--rz-primary-darker-rgb), 0.8);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 10;
        border-radius: 4px;
    }

    .upload-progress-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(var(--rz-black-rgb), 0.85);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 10;
        border-radius: 4px;
    }

    .file-select-button {
        background-color: var(--rz-primary) !important;
        color: white !important;
        border: none !important;
        transition: all 0.2s ease;
    }

        .file-select-button:hover {
            background-color: var(--rz-primary-dark) !important;
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16) !important;
        }

    .file-name {
        font-weight: 500;
        color: var(--rz-primary-light);
    }

    /* 카드 스타일 개선 */
    .rz-card {
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
        border: 1px solid var(--rz-border-light);
    }

    /* 플레이리스트 드롭 존 */
    .playlist-drop-zone {
        width: 100%;
        min-height: 80px;
        position: relative;
    }

        .playlist-drop-zone.drag-over {
            background-color: rgba(76, 175, 80, 0.1);
            border-radius: 8px;
            outline: 2px dashed #4CAF50;
            outline-offset: -2px;
        }

    /* 플레이리스트 카드 스타일 */
    .playlist-card {
        border: 1px solid var(--rz-border);
        transition: all 0.2s ease;
        padding: 0.75rem !important;
        min-height: 48px;
    }

        .playlist-card:hover {
            border-color: var(--rz-primary-lighter);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }

        .playlist-card.selected {
            border-color: var(--rz-primary);
            background-color: var(--rz-primary-lighter);
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
        }

        .playlist-card.drag-over {
            border-color: var(--rz-success);
            background-color: var(--rz-success-lighter);
            box-shadow: 0 4px 20px rgba(0, 255, 0, 0.2);
            transform: scale(1.02);
        }

    /* 미디어 카드 스타일 */
    .media-card {
        border: 1px solid var(--rz-border);
        transition: all 0.2s ease;
        padding: 1rem !important;
        cursor: move;
    }

        .media-card:hover {
            border-color: var(--rz-primary-lighter);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            background-color: var(--rz-base-100);
        }

        .media-card.selected {
            border-color: var(--rz-primary);
            background-color: var(--rz-primary-lighter);
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
        }

        .media-card.dragging {
            opacity: 0.5;
            cursor: grabbing;
        }

    /* 선택 정보 카드 스타일 */
    .selected-info-card {
        background-color: var(--rz-info-lighter);
        border-color: var(--rz-info);
        padding: 0.75rem !important;
    }

    /* 필터 카드 스타일 */
    .filter-card {
        background-color: var(--rz-base-100);
        border: 1px solid var(--rz-border);
        padding: 1rem !important;
    }

    /* 플레이리스트 내 미디어 목록 스타일 */
    .playlist-media-list {
        background-color: rgba(0, 0, 0, 0.05);
        border: 1px solid rgba(0, 0, 0, 0.1);
        padding: 0.75rem !important;
        margin-top: 0.5rem;
        border-radius: 4px;
    }

    /* 다크 테마용 플레이리스트 미디어 목록 */
    :root[data-theme='dark'] .playlist-media-list {
        background-color: rgba(255, 255, 255, 0.05);
        border-color: rgba(255, 255, 255, 0.1);
    }

    .media-item {
        padding: 0.25rem 0;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        transition: background-color 0.2s ease;
    }

        .media-item:hover {
            background-color: rgba(0, 0, 0, 0.02);
        }

        .media-item:last-child {
            border-bottom: none;
        }

    /* 다크 테마용 미디어 아이템 */
    :root[data-theme='dark'] .media-item {
        border-bottom-color: rgba(255, 255, 255, 0.05);
    }

        :root[data-theme='dark'] .media-item:hover {
            background-color: rgba(255, 255, 255, 0.02);
        }

    /* 확장/축소 버튼 애니메이션 */
    .rz-button-icon-only {
        transition: transform 0.2s ease;
    }

    /* 드래그 중 커서 스타일 */
    [draggable="true"] {
        cursor: grab;
    }

        [draggable="true"]:active {
            cursor: grabbing;
        }

    /* 다크 테마 지원 */
    :root[data-theme='dark'] .playlist-card.drag-over {
        background-color: rgba(var(--rz-success-rgb), 0.2);
    }

    :root[data-theme='dark'] .media-card.selected {
        background-color: rgba(var(--rz-primary-rgb), 0.2);
    }

    :root[data-theme='dark'] .selected-info-card {
        background-color: rgba(var(--rz-info-rgb), 0.2);
    }

    :root[data-theme='dark'] .file-drop-zone {
        background-color: rgba(var(--rz-black-rgb), 0.2) !important;
        border-color: var(--rz-secondary) !important;
    }

    :root[data-theme='dark'] .text-secondary {
        color: var(--rz-text-secondary-color) !important;
    }

    :root[data-theme='light'] .file-drop-zone {
        background-color: var(--rz-base-100) !important;
        border-color: var(--rz-secondary-light) !important;
    }

    :root[data-theme='light'] .upload-progress-overlay {
        background-color: rgba(var(--rz-base-400-rgb), 0.9);
    }

    :root[data-theme='light'] .file-name {
        color: var(--rz-primary);
    }

    /* 스크롤바 스타일 */
    ::-webkit-scrollbar {
        width: 8px;
        height: 8px;
    }

    ::-webkit-scrollbar-track {
        background: var(--rz-base-100);
        border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb {
        background: var(--rz-text-disabled-color);
        border-radius: 4px;
    }

        ::-webkit-scrollbar-thumb:hover {
            background: var(--rz-text-secondary-color);
        }

    /* 아이콘 정렬 */
    .rz-icon {
        vertical-align: middle;
    }
</style>
