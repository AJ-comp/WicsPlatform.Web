@using WicsPlatform.Server.Models.wics

<RadzenCard class="mt-3 collapsible-panel-container">
<!-- 패널 헤더 -->
<div @onclick="TogglePanel" 
     style="background-color: var(--rz-sidebar-background-color); padding: 0.5rem 0.75rem; cursor: pointer; transition: all 0.3s ease; user-select: none; border-radius: var(--rz-border-radius) var(--rz-border-radius) 0 0; border-bottom: 1px solid var(--rz-border-color);">
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Style="width: 100%;">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.375rem">
            <RadzenIcon Icon="record_voice_over" Style="font-size: 1.25rem; color: var(--rz-primary);" />
            <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0" Style="font-size: 0.95rem;">
                @(Channel?.Name ?? "채널") - TTS 설정
            </RadzenText>
            @if (selectedTtsId.HasValue)
            {
                <RadzenBadge BadgeStyle="BadgeStyle.Info" IsPill="true" Text="1개 선택" Style="font-size: 0.65rem; padding: 2px 8px;" />
            }
        </RadzenStack>

        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
            @* 방송 중일 때 TTS 재생/중지 버튼 표시 *@
            @if (IsBroadcasting && !IsCollapsed)
            {
                <div @onclick:stopPropagation="true">
                    @if (!isTtsPlaying)
                    {
                        <RadzenButton Icon="play_circle_filled"
                                      Text="재생"
                                      ButtonStyle="ButtonStyle.Success"
                                      Size="ButtonSize.Small"
                                      Disabled="@(!HasSelectedTts() || isTtsActionInProgress)"
                                      Click="@PlayTts"
                                      Title="@(!HasSelectedTts() ? "재생할 TTS를 먼저 선택하세요" : "선택된 TTS 재생")" />
                    }
                    else
                    {
                        <RadzenButton Icon="stop_circle"
                                      Text="중지"
                                      ButtonStyle="ButtonStyle.Warning"
                                      Size="ButtonSize.Small"
                                      Disabled="@isTtsActionInProgress"
                                      Click="@StopTts"
                                      Title="TTS 재생 중지" />
                    }

                    @if (isTtsActionInProgress)
                    {
                        <RadzenProgressBarCircular Value="100"
                                                   ShowValue="false"
                                                   Mode="ProgressBarMode.Indeterminate"
                                                   Size="ProgressBarCircularSize.ExtraSmall" />
                    }
                </div>
            }

            <RadzenIcon Icon="@(IsCollapsed ? "expand_more" : "expand_less")"
                        Style="font-size: 1.25rem; transition: transform 0.3s ease;"
                        class="@(IsCollapsed ? "rotate-icon" : "")" />
        </RadzenStack>
    </RadzenStack>
</div>

    @if (!IsCollapsed)
    {
        <div class="panel-content" Style="padding: 0.5rem;">
            @* 방송 중 상태 표시 *@
            @if (IsBroadcasting)
            {
                <RadzenAlert AlertStyle="AlertStyle.Info"
                             Variant="Variant.Flat"
                             Shade="Shade.Lighter"
                             AllowClose="false"
                             Style="margin-bottom: 0.5rem;">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem" Wrap="FlexWrap.Wrap">
                        <RadzenIcon Icon="broadcast_on_home" Style="color: var(--rz-info);" />
                        <RadzenText TextStyle="TextStyle.Caption">
                            방송 중 - ID: <strong>@BroadcastId</strong>
                        </RadzenText>
                        @if (isTtsPlaying)
                        {
                            <RadzenBadge BadgeStyle="BadgeStyle.Success" Text="재생 중" IsPill="true" />
                        }
                    </RadzenStack>
                </RadzenAlert>
            }

            <RadzenStack Gap="0.5rem;">
                <!-- TTS 툴바 -->
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Wrap="FlexWrap.Wrap" Gap="0.5rem">
                    <RadzenText TextStyle="TextStyle.Caption" class="rz-color-secondary">
                        채널에서 사용할 TTS를 선택하세요 (하나만 선택 가능)
                    </RadzenText>

                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                        @if (selectedTtsId.HasValue)
                        {
                            <RadzenButton Text="선택 해제"
                                          Icon="clear"
                                          ButtonStyle="ButtonStyle.Light"
                                          Size="ButtonSize.ExtraSmall"
                                          Variant="Variant.Flat"
                                          Style="font-size: 0.7rem; padding: 0.2rem 0.4rem;"
                                          Click="@ClearTtsSelection" />
                        }
                        <RadzenButton Icon="add"
                                      Text="추가"
                                      ButtonStyle="ButtonStyle.Light"
                                      Size="ButtonSize.Small"
                                      Click="@ShowAddTtsDialog" />
                    </RadzenStack>
                </RadzenStack>

                <!-- TTS 목록 -->
                @if (isLoadingTts)
                {
                    <RadzenStack AlignItems="AlignItems.Center" Gap="0.75rem" Style="padding: 2rem;">
                        <RadzenProgressBarCircular Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Small" />
                        <RadzenText Text="TTS 목록을 불러오는 중..." TextStyle="TextStyle.Caption" class="rz-color-secondary" />
                    </RadzenStack>
                }
                else if (ttsList.Any())
                {
                    <div class="tts-list-container" Style="max-height: 350px; overflow-y: auto; border: 1px solid var(--rz-border-color); border-radius: var(--rz-border-radius); padding: 0.25rem;">
                        @foreach (var tts in ttsList)
                        {
                            <div class="tts-item @(selectedTtsId == tts.Id ? "tts-selected" : "")"
                                 @onclick="@(() => { selectedTtsId = tts.Id; OnRadioButtonListChanged(); })"
                                 Style="padding: 0.35rem 0.5rem; margin-bottom: 0.25rem; border-radius: var(--rz-border-radius); background: var(--rz-base-background-color); border: 2px solid transparent; cursor: pointer; transition: all 0.2s ease;">
                                <RadzenRow AlignItems="AlignItems.Center" Gap="0.35rem">
                                    <RadzenColumn Size="1" Style="display: flex; justify-content: flex-start; align-items: center; padding-left: 0.25rem; padding-right: 0.25rem; max-width: 30px;">
                                        <input type="radio" 
                                               name="@($"tts-radio-{Channel?.Id}")"
                                               checked="@(selectedTtsId == tts.Id)"
                                               @onclick="@(() => { selectedTtsId = tts.Id; OnRadioButtonListChanged(); })"
                                               @onclick:stopPropagation="true"
                                               style="cursor: pointer; width: 16px; height: 16px; margin: 0;" />
                                    </RadzenColumn>

                                    <RadzenColumn Size="6">
                                        <RadzenStack Gap="0.15rem">
                                            <RadzenText TextStyle="TextStyle.Body2" Style="font-size: 0.75rem; font-weight: 600;">
                                                @tts.Name
                                            </RadzenText>
                                            <RadzenText TextStyle="TextStyle.Caption" class="rz-color-secondary"
                                                        Style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap; max-width: 400px; font-size: 0.65rem;">
                                                @tts.Content
                                            </RadzenText>
                                        </RadzenStack>
                                    </RadzenColumn>

                                    <RadzenColumn Size="2">
                                        <RadzenText TextStyle="TextStyle.Caption" class="rz-color-secondary" Style="font-size: 0.65rem;">
                                            @tts.CreatedAt.ToString("yy.MM.dd")
                                        </RadzenText>
                                    </RadzenColumn>

                                    <RadzenColumn Size="3">
                                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.2rem">
                                            <!-- 재생/정지 버튼 -->
                                            <RadzenButton Icon="@(playingTtsId == tts.Id ? "stop" : "play_arrow")"
                                                          ButtonStyle="@(playingTtsId == tts.Id ? ButtonStyle.Warning : ButtonStyle.Success)"
                                                          Variant="Variant.Flat"
                                                          Size="ButtonSize.ExtraSmall"
                                                          Click="@(() => ToggleTtsPlayback(tts))"
                                                          @onclick:stopPropagation="true"
                                                          Style="min-width: 24px; height: 24px; padding: 0;"
                                                          Title="@(playingTtsId == tts.Id ? "정지" : "미리듣기")" />

                                            <!-- 편집 버튼 -->
                                            <RadzenButton Icon="edit"
                                                          ButtonStyle="ButtonStyle.Light"
                                                          Variant="Variant.Flat"
                                                          Size="ButtonSize.Small"
                                                          class="expand-button"
                                                          Click="@(() => OpenEditTtsDialog(tts))"
                                                          @onclick:stopPropagation="true"
                                                          Title="편집" />

                                            <!-- 삭제 버튼 -->
                                            <RadzenButton Icon="delete"
                                                          ButtonStyle="ButtonStyle.Light"
                                                          Variant="Variant.Flat"
                                                          Size="ButtonSize.Small"
                                                          class="expand-button"
                                                          Click="@(() => OpenDeleteTtsDialog(tts))"
                                                          @onclick:stopPropagation="true"
                                                          Title="삭제"
                                                          Style="color: var(--rz-danger);" />
                                        </RadzenStack>
                                    </RadzenColumn>
                                </RadzenRow>
                            </div>
                        }
                    </div>

                    @if (selectedTtsId.HasValue)
                    {
                        <RadzenAlert AlertStyle="AlertStyle.Success" 
                                     Variant="Variant.Flat" 
                                     Shade="Shade.Lighter"
                                     AllowClose="false"
                                     Style="margin-top: 0.5rem;">
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                <RadzenIcon Icon="check_circle" Style="color: var(--rz-success);" />
                                <RadzenText TextStyle="TextStyle.Caption">
                                    선택된 TTS: <strong>@(ttsList.FirstOrDefault(t => t.Id == selectedTtsId.Value)?.Name ?? "알 수 없음")</strong>
                                </RadzenText>
                            </RadzenStack>
                        </RadzenAlert>
                    }
                }
                else
                {
                    <RadzenStack AlignItems="AlignItems.Center" Gap="0.75rem" Style="padding: 2rem; text-align: center;">
                        <RadzenIcon Icon="speaker_notes_off" Style="font-size: 3rem; color: var(--rz-text-disabled-color);" />
                        <RadzenText TextStyle="TextStyle.Body2">등록된 TTS가 없습니다</RadzenText>
                        <RadzenText TextStyle="TextStyle.Caption" class="rz-color-secondary">
                            'TTS 추가' 버튼을 클릭하여 새로운 TTS를 생성하세요
                        </RadzenText>
                    </RadzenStack>
                }
            </RadzenStack>
        </div>
    }
</RadzenCard>

<style>
    .collapsible-panel-container {
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .panel-content {
        animation: slideDown 0.3s ease-out;
        background-color: var(--rz-base-background-color);
        border-radius: 0 0 var(--rz-border-radius) var(--rz-border-radius);
        border: 1px solid var(--rz-border-color);
        border-top: none;
    }

    .rotate-icon {
        transform: rotate(-90deg);
    }

    /* TTS 목록 스크롤바 */
    .tts-list-container::-webkit-scrollbar {
        width: 6px;
    }

    .tts-list-container::-webkit-scrollbar-track {
        background: var(--rz-base-200);
        border-radius: 3px;
    }

    .tts-list-container::-webkit-scrollbar-thumb {
        background: var(--rz-base-400);
        border-radius: 3px;
    }

        .tts-list-container::-webkit-scrollbar-thumb:hover {
            background: var(--rz-base-500);
        }

    /* TTS 아이템 스타일 */
    .tts-item {
        transition: all 0.2s ease;
        border: 2px solid transparent !important;
    }

        .tts-item:hover:not(.tts-selected) {
            background-color: rgba(var(--rz-primary-rgb), 0.08) !important;
            transform: translateX(2px);
            box-shadow: var(--rz-shadow-1) !important;
        }

        .tts-item.tts-selected {
            background: linear-gradient(90deg, rgba(var(--rz-primary-rgb), 0.2) 0%, rgba(var(--rz-primary-rgb), 0.15) 100%) !important;
            border: 2px solid var(--rz-primary) !important;
            box-shadow: 0 0 8px rgba(var(--rz-primary-rgb), 0.3) !important;
        }

    /* 네이티브 라디오 버튼 스타일 */
    .tts-item input[type="radio"] {
        display: inline-block !important;
        width: 16px !important;
        height: 16px !important;
        opacity: 1 !important;
        visibility: visible !important;
        cursor: pointer !important;
        margin: 0 !important;
        accent-color: var(--rz-primary) !important;
    }

    .tts-item input[type="radio"]:checked {
        accent-color: var(--rz-primary) !important;
    }

    /* 확장 버튼 스타일 */
    .expand-button {
        min-width: 20px !important;
        padding: 2px !important;
        height: 20px !important;
    }

        .expand-button .rz-button-icon {
            font-size: 0.75rem !important;
        }

    /* 애니메이션 */
    @@keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>