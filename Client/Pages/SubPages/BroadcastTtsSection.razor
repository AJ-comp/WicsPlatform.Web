@using WicsPlatform.Server.Models.wics

<RadzenCard class="mt-2 professional-panel">
    <!-- 패널 헤더 -->
    <div @onclick="TogglePanel" class="panel-header">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.375rem">
                <RadzenIcon Icon="record_voice_over" class="panel-icon primary" />
                <RadzenText TextStyle="TextStyle.Body1" class="panel-title">
                    @(Channel?.Name ?? "채널") - TTS 설정
                </RadzenText>
                @if (selectedTtsId.HasValue)
                {
                    <RadzenBadge BadgeStyle="BadgeStyle.Info" IsPill="true" Text="1개 선택" class="selection-badge" />
                }
            </RadzenStack>

            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.375rem">
                @* 방송 중일 때 TTS 재생/중지 버튼 표시 *@
                @if (IsBroadcasting && !IsCollapsed)
                {
                    <div class="broadcast-controls" @onclick:stopPropagation="true">
                        @if (!isTtsPlaying)
                        {
                            <RadzenButton Icon="play_circle_filled"
                                          Text="재생"
                                          ButtonStyle="ButtonStyle.Success"
                                          Size="ButtonSize.Small"
                                          Disabled="@(!HasSelectedTts() || isTtsActionInProgress)"
                                          Click="@PlayTts"
                                          class="broadcast-button play"
                                          Title="@(!HasSelectedTts() ? "재생할 TTS를 먼저 선택하세요" : "선택된 TTS 재생")" />
                        }
                        else
                        {
                            <RadzenButton Icon="stop_circle"
                                          Text="중지"
                                          ButtonStyle="ButtonStyle.Warning"
                                          Size="ButtonSize.Small"
                                          Disabled="@isTtsActionInProgress"
                                          Click="@StopTts"
                                          class="broadcast-button stop"
                                          Title="TTS 재생 중지" />
                        }

                        @if (isTtsActionInProgress)
                        {
                            <RadzenProgressBarCircular Value="100"
                                                       ShowValue="false"
                                                       Mode="ProgressBarMode.Indeterminate"
                                                       Size="ProgressBarCircularSize.ExtraSmall"
                                                       class="progress-indicator" />
                        }
                    </div>

                    <div class="divider"></div>
                }

                <RadzenIcon Icon="@(IsCollapsed ? "expand_more" : "expand_less")" class="expand-icon" />
            </RadzenStack>
        </RadzenStack>
    </div>

    @if (!IsCollapsed)
    {
        <div class="panel-content">
            @* 방송 중 상태 표시 *@
            @if (IsBroadcasting)
            {
                <RadzenAlert AlertStyle="AlertStyle.Info"
                             Variant="Variant.Flat"
                             Size="AlertSize.Small"
                             AllowClose="false"
                             class="broadcast-alert">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.375rem">
                        <RadzenIcon Icon="broadcast_on_home" class="broadcast-icon" />
                        <RadzenText TextStyle="TextStyle.Caption" class="broadcast-text">
                            방송 중 - ID: <strong>@BroadcastId</strong>
                        </RadzenText>
                        @if (isTtsPlaying)
                        {
                            <RadzenBadge BadgeStyle="BadgeStyle.Success" Text="재생 중" class="playing-badge" />
                        }
                    </RadzenStack>
                </RadzenAlert>
            }

            <RadzenStack Gap="0.75rem">
                <!-- TTS 툴바 -->
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                    <RadzenText TextStyle="TextStyle.Caption" class="info-text">
                        채널에서 사용할 TTS를 선택하세요 (하나만 선택 가능)
                    </RadzenText>

                    <RadzenStack Orientation="Orientation.Horizontal" Gap="0.375rem">
                        @if (selectedTtsId.HasValue)
                        {
                            <RadzenButton Text="선택 해제"
                                          Icon="clear"
                                          ButtonStyle="ButtonStyle.Light"
                                          Size="ButtonSize.Small"
                                          Variant="Variant.Flat"
                                          class="toolbar-button"
                                          Click="@ClearTtsSelection" />
                        }
                        <RadzenButton Icon="add_circle"
                                      Text="TTS 추가"
                                      Size="ButtonSize.Small"
                                      ButtonStyle="ButtonStyle.Primary"
                                      class="toolbar-button primary"
                                      Click="@ShowAddTtsDialog" />
                    </RadzenStack>
                </RadzenStack>

                <!-- TTS 목록 -->
                @if (isLoadingTts)
                {
                    <div class="loading-container">
                        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" class="slim-progress" />
                        <RadzenText Text="TTS 목록을 불러오는 중..." TextStyle="TextStyle.Caption" class="loading-text" />
                    </div>
                }
                else if (ttsList.Any())
                {
                    <div class="tts-list-container">
                        @foreach (var tts in ttsList)
                        {
                            <div class="tts-item @(selectedTtsId == tts.Id ? "selected" : "")"
                                 @onclick="@(() => { selectedTtsId = tts.Id; OnRadioButtonListChanged(); })">
                                <RadzenRow AlignItems="AlignItems.Center" Gap="0.375rem">
                                    <RadzenColumn Size="1">
                                        <input type="radio"
                                               name="@($"tts-radio-{Channel?.Id}")"
                                               checked="@(selectedTtsId == tts.Id)"
                                               class="tts-radio" />
                                    </RadzenColumn>

                                    <RadzenColumn Size="7">
                                        <RadzenStack Gap="0.15rem">
                                            <RadzenText TextStyle="TextStyle.Caption" class="tts-name">
                                                @tts.Name
                                            </RadzenText>
                                            <RadzenText TextStyle="TextStyle.Caption" class="tts-content">
                                                @tts.Content
                                            </RadzenText>
                                        </RadzenStack>
                                    </RadzenColumn>

                                    <RadzenColumn Size="2">
                                        <RadzenText TextStyle="TextStyle.Caption" class="tts-date">
                                            @tts.CreatedAt.ToString("yyyy.MM.dd")
                                        </RadzenText>
                                    </RadzenColumn>

                                    <RadzenColumn Size="2">
                                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.25rem">
                                            <!-- 재생/정지 버튼 -->
                                            <RadzenButton Icon="@(playingTtsId == tts.Id ? "stop" : "play_arrow")"
                                                          ButtonStyle="@(playingTtsId == tts.Id ? ButtonStyle.Warning : ButtonStyle.Success)"
                                                          Variant="Variant.Flat"
                                                          Size="ButtonSize.Small"
                                                          class="tts-action-button"
                                                          Click="@(() => ToggleTtsPlayback(tts))"
                                                          @onclick:stopPropagation="true"
                                                          Title="@(playingTtsId == tts.Id ? "정지" : "미리듣기")" />

                                            <!-- 편집 버튼 -->
                                            <RadzenButton Icon="edit"
                                                          ButtonStyle="ButtonStyle.Info"
                                                          Variant="Variant.Flat"
                                                          Size="ButtonSize.Small"
                                                          class="tts-action-button"
                                                          Click="@(() => OpenEditTtsDialog(tts))"
                                                          @onclick:stopPropagation="true"
                                                          Title="편집" />

                                            <!-- 삭제 버튼 -->
                                            <RadzenButton Icon="delete"
                                                          ButtonStyle="ButtonStyle.Danger"
                                                          Variant="Variant.Flat"
                                                          Size="ButtonSize.Small"
                                                          class="tts-action-button"
                                                          Click="@(() => OpenDeleteTtsDialog(tts))"
                                                          @onclick:stopPropagation="true"
                                                          Title="삭제" />
                                        </RadzenStack>
                                    </RadzenColumn>
                                </RadzenRow>
                            </div>
                        }
                    </div>

                    @if (selectedTtsId.HasValue)
                    {
                        <RadzenCard class="selected-info-card">
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.375rem">
                                <RadzenIcon Icon="check_circle" class="success-icon" />
                                <RadzenText TextStyle="TextStyle.Caption" class="selected-text">
                                    선택된 TTS: <strong>@(ttsList.FirstOrDefault(t => t.Id == selectedTtsId.Value)?.Name ?? "알 수 없음")</strong>
                                </RadzenText>
                            </RadzenStack>
                        </RadzenCard>
                    }
                }
                else
                {
                    <RadzenCard class="empty-state-card">
                        <RadzenIcon Icon="speaker_notes_off" class="empty-icon" />
                        <RadzenText TextStyle="TextStyle.Caption" class="empty-text">
                            등록된 TTS가 없습니다
                        </RadzenText>
                        <RadzenText TextStyle="TextStyle.Caption" class="empty-subtext">
                            'TTS 추가' 버튼을 클릭하여 새로운 TTS를 생성하세요
                        </RadzenText>
                    </RadzenCard>
                }
            </RadzenStack>
        </div>
    }
</RadzenCard>

<style>
    /* 전문적인 패널 디자인 */
    .professional-panel {
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05) !important;
        border: 1px solid #dde2e6 !important;
        border-radius: 6px !important;
        background: var(--rz-base-background-color)!important;
        overflow: hidden;
    }

    .panel-header {
        background: #fafbfc;
        padding: 0.625rem 0.875rem;
        cursor: pointer;
        transition: all 0.2s ease;
        border-bottom: 1px solid #e1e4e8;
        user-select: none;
    }

        .panel-header:hover {
            background: #f5f6f8;
        }

    .panel-icon.primary {
        font-size: 1rem !important;
        color: #3498db !important;
    }

    .panel-title {
        font-size: 0.875rem !important;
        font-weight: 600 !important;
        color: #2c3e50 !important;
        margin: 0 !important;
    }

    .selection-badge {
        font-size: 0.6rem !important;
        padding: 2px 5px !important;
    }

    .expand-icon {
        font-size: 1rem !important;
        color: #6c757d !important;
        transition: transform 0.2s ease;
    }

    .panel-content {
        padding: 0.875rem;
        animation: slideDown 0.2s ease-out;
    }

    /* 방송 컨트롤 */
    .broadcast-controls {
        display: flex;
        align-items: center;
        gap: 0.375rem;
    }

    .broadcast-button {
        font-size: 0.7rem !important;
        padding: 0.25rem 0.5rem !important;
        height: 26px !important;
    }

        .broadcast-button.play {
            background: #27ae60 !important;
            border-color: #27ae60 !important;
        }

        .broadcast-button.stop {
            background: #f39c12 !important;
            border-color: #f39c12 !important;
        }

    .progress-indicator {
        width: 18px !important;
        height: 18px !important;
    }

    .divider {
        width: 1px;
        height: 20px;
        background-color: #e1e4e8;
    }

    /* 방송 알림 */
    .broadcast-alert {
        padding: 0.5rem 0.75rem !important;
        background-color: #e8f4fd !important;
        border: 1px solid #b8daff !important;
        margin-bottom: 0.75rem;
    }

    .broadcast-icon {
        font-size: 0.875rem !important;
        color: #3498db !important;
    }

    .broadcast-text {
        font-size: 0.7rem !important;
        color: #2c3e50 !important;
        margin: 0 !important;
    }

    .playing-badge {
        font-size: 0.6rem !important;
        padding: 2px 5px !important;
    }

    /* 정보 텍스트 */
    .info-text {
        font-size: 0.7rem !important;
        color: #6c757d !important;
        margin: 0 !important;
    }

    /* 툴바 버튼 */
    .toolbar-button {
        font-size: 0.7rem !important;
        padding: 0.25rem 0.5rem !important;
        height: 26px !important;
    }

        .toolbar-button.primary {
            background: #3498db !important;
            border-color: #3498db !important;
            color: white !important;
            font-weight: 500 !important;
        }

            .toolbar-button.primary:hover {
                background: #2980b9 !important;
                border-color: #2980b9 !important;
            }

    /* TTS 목록 */
    .tts-list-container {
        max-height: 350px;
        overflow-y: auto;
        border: 1px solid #e1e4e8;
        border-radius: 4px;
        padding: 0.5rem;
    }

    .tts-item {
        padding: 0.5rem;
        margin-bottom: 0.375rem;
        border-radius: 4px;
        background: #fafbfc;
        border: 1px solid #e1e4e8;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .tts-item:last-child {
            margin-bottom: 0;
        }

        .tts-item:hover {
            background: var(--rz-base-background-color);
            border-color: #3498db;
            transform: translateX(2px);
        }

        .tts-item.selected {
            background: #e8f4fd;
            border-color: #3498db;
        }

    .tts-radio {
        width: 12px;
        height: 12px;
        accent-color: #3498db;
        cursor: pointer;
    }

    .tts-name {
        font-size: 0.75rem !important;
        font-weight: 600 !important;
        color: #2c3e50 !important;
        margin: 0 !important;
    }

    .tts-content {
        font-size: 0.65rem !important;
        color: #6c757d !important;
        margin: 0 !important;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        max-width: 400px;
    }

    .tts-date {
        font-size: 0.65rem !important;
        color: #6c757d !important;
        margin: 0 !important;
    }

    .tts-action-button {
        width: 24px !important;
        height: 24px !important;
        padding: 0 !important;
    }

        .tts-action-button .rz-button-icon {
            font-size: 0.75rem !important;
        }

    /* 선택 정보 카드 */
    .selected-info-card {
        padding: 0.5rem 0.75rem !important;
        background: #d4edda !important;
        border: 1px solid #27ae60 !important;
    }

    .success-icon {
        font-size: 0.875rem !important;
        color: #27ae60 !important;
    }

    .selected-text {
        font-size: 0.7rem !important;
        color: #155724 !important;
        margin: 0 !important;
    }

    /* 로딩 상태 */
    .loading-container {
        text-align: center;
        padding: 2rem 0;
    }

    .slim-progress {
        width: 100px !important;
        height: 3px !important;
        margin: 0 auto !important;
    }

    .loading-text {
        margin-top: 0.5rem !important;
        font-size: 0.7rem !important;
        color: #6c757d !important;
    }

    /* 빈 상태 */
    .empty-state-card {
        padding: 2rem !important;
        text-align: center;
        background: #fafbfc !important;
        border: 1px solid #e1e4e8 !important;
    }

    .empty-icon {
        font-size: 2rem !important;
        color: #d0d7de !important;
        margin-bottom: 0.5rem;
    }

    .empty-text {
        font-size: 0.75rem !important;
        color: #6c757d !important;
        margin: 0.25rem 0 !important;
    }

    .empty-subtext {
        font-size: 0.7rem !important;
        color: #6c757d !important;
        margin: 0 !important;
    }

    /* 스크롤바 */
    .tts-list-container::-webkit-scrollbar {
        width: 5px;
    }

    .tts-list-container::-webkit-scrollbar-track {
        background: #f0f0f0;
        border-radius: 3px;
    }

    .tts-list-container::-webkit-scrollbar-thumb {
        background: #c0c0c0;
        border-radius: 3px;
    }

        .tts-list-container::-webkit-scrollbar-thumb:hover {
            background: #a0a0a0;
        }

    /* 애니메이션 */
    @@keyframes slideDown {
        from

    {
        opacity: 0;
        transform: translateY(-5px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    /* 다크 테마 */
    :root[data-theme='dark'] .professional-panel {
        background: #0d1117 !important;
        border-color: #30363d !important;
    }

    :root[data-theme='dark'] .panel-header {
        background: #161b22;
        border-bottom-color: #30363d;
    }

        :root[data-theme='dark'] .panel-header:hover {
            background: #1f2937;
        }

    :root[data-theme='dark'] .tts-list-container {
        background: #0d1117;
        border-color: #30363d;
    }

    :root[data-theme='dark'] .tts-item {
        background: #161b22;
        border-color: #21262d;
    }

        :root[data-theme='dark'] .tts-item:hover {
            background: #1f2937;
            border-color: #3498db;
        }

        :root[data-theme='dark'] .tts-item.selected {
            background: #1f2937;
            border-color: #3498db;
        }

    :root[data-theme='dark'] .broadcast-alert {
        background-color: #1f2937 !important;
        border-color: #374151 !important;
    }

    :root[data-theme='dark'] .selected-info-card {
        background: #1f2937 !important;
        border-color: #27ae60 !important;
    }

    :root[data-theme='dark'] .empty-state-card {
        background: #161b22 !important;
        border-color: #30363d !important;
    }

    :root[data-theme='dark'] .divider {
        background-color: #30363d;
    }

    :root[data-theme='dark'] .tts-name {
        color: #c9d1d9 !important;
    }

    :root[data-theme='dark'] .broadcast-text {
        color: #c9d1d9 !important;
    }

    :root[data-theme='dark'] .selected-text {
        color: #56d364 !important;
    }
</style>