@using WicsPlatform.Server.Models.wics

<RadzenCard class="mt-2 professional-panel">
    <!-- 패널 헤더 -->
    <div @onclick="TogglePanel" class="panel-header">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.375rem">
                <RadzenIcon Icon="playlist_play" class="panel-icon primary" />
                <RadzenText TextStyle="TextStyle.Body1" class="panel-title">
                    @(Channel?.Name ?? "채널") - 플레이리스트 관리
                </RadzenText>
            </RadzenStack>

            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.375rem">
                @* 방송 중일 때 미디어 재생/중지 버튼 표시 *@
                @if (IsBroadcasting && !IsCollapsed)
                {
                    <div class="broadcast-controls" @onclick:stopPropagation="true">
                        @if (!isMediaPlaying)
                        {
                            <RadzenButton Icon="play_circle"
                                          Text="재생"
                                          ButtonStyle="ButtonStyle.Success"
                                          Size="ButtonSize.Small"
                                          Disabled="@(!HasSelectedMedia() || isMediaActionInProgress)"
                                          Click="@PlayMedia"
                                          class="control-button play"
                                          Title="@(!HasSelectedMedia() ? "미디어를 선택하세요" : "선택된 미디어 재생")" />
                        }
                        else
                        {
                            <RadzenButton Icon="stop"
                                          Text="중지"
                                          ButtonStyle="ButtonStyle.Warning"
                                          Size="ButtonSize.Small"
                                          Disabled="@isMediaActionInProgress"
                                          Click="@StopMedia"
                                          class="control-button stop"
                                          Title="미디어 재생 중지" />
                        }

                        @if (isMediaActionInProgress)
                        {
                            <RadzenProgressBarCircular Value="100"
                                                       ShowValue="false"
                                                       Mode="ProgressBarMode.Indeterminate"
                                                       Size="ProgressBarCircularSize.ExtraSmall"
                                                       class="progress-spinner" />
                        }
                    </div>

                    <div class="divider"></div>
                }

                <RadzenIcon Icon="@(IsCollapsed ? "expand_more" : "expand_less")" class="expand-icon" />
            </RadzenStack>
        </RadzenStack>
    </div>

    <!-- 패널 내용 -->
    @if (!IsCollapsed)
    {
        <div class="panel-content">
            @* 방송 중 상태 표시 *@
            @if (IsBroadcasting)
            {
                <RadzenAlert AlertStyle="AlertStyle.Info"
                             Variant="Variant.Flat"
                             Size="AlertSize.Small"
                             AllowClose="false"
                             class="broadcast-alert">
                    <RadzenStack Orientation="Orientation.Horizontal"
                                 AlignItems="AlignItems.Center"
                                 Gap="0.375rem">
                        <RadzenIcon Icon="broadcast_on_home" class="broadcast-icon" />
                        <RadzenText TextStyle="TextStyle.Caption" class="broadcast-text">
                            방송 중 - ID: <strong>@BroadcastId</strong>
                        </RadzenText>
                        @if (isMediaPlaying)
                        {
                            <RadzenBadge BadgeStyle="BadgeStyle.Success"
                                         Text="재생 중"
                                         class="status-badge playing" />
                        }
                        @if (HasSelectedMedia())
                        {
                            <RadzenBadge BadgeStyle="BadgeStyle.Info"
                                         Text="@($"{GetSelectedMedia().Count()}개 선택")"
                                         class="status-badge selected" />
                        }
                    </RadzenStack>
                </RadzenAlert>
            }

            <RadzenStack Gap="0.75rem">
                <!-- 플레이리스트와 미디어 섹션 -->
                <RadzenRow Gap="0.5rem">
                    <!-- 좌측: 플레이리스트 목록 -->
                    <RadzenColumn Size="12" SizeMD="5">
                        <RadzenCard class="playlist-card">
                            <RadzenStack Gap="0.5rem">
                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                                    <RadzenIcon Icon="queue_music" class="section-icon" />
                                    <RadzenText TextStyle="TextStyle.Body2" class="section-title">플레이리스트</RadzenText>
                                </RadzenStack>

                                @if (isLoadingPlaylists)
                                {
                                    <div class="loading-container">
                                        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" class="slim-progress" />
                                        <RadzenText Text="플레이리스트 로딩 중..." TextStyle="TextStyle.Caption" class="loading-text" />
                                    </div>
                                }
                                else if (playlists.Any())
                                {
                                    <div class="playlist-container">
                                        @foreach (var playlist in playlists)
                                        {
                                            <div class="@($"playlist-item {(selectedPlaylist?.Id == playlist.Id ? "selected" : "")}")"
                                                 @onclick="@(() => OnPlaylistCardClicked(playlist))">
                                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                                                        <span @onclick:stopPropagation="true">
                                                            <RadzenCheckBox Value="@IsPlaylistSelected(playlist.Id)"
                                                                            Change="@((bool value) => OnPlaylistCheckChanged(playlist.Id, value))"
                                                                            class="compact-checkbox" />
                                                        </span>
                                                        <RadzenIcon Icon="album" class="playlist-icon" />
                                                        <RadzenStack Gap="0">
                                                            <RadzenText TextStyle="TextStyle.Caption" class="playlist-name">
                                                                @playlist.Name
                                                            </RadzenText>
                                                            @if (!string.IsNullOrEmpty(playlist.Description))
                                                            {
                                                                <RadzenText TextStyle="TextStyle.Caption" class="playlist-desc">
                                                                    @playlist.Description
                                                                </RadzenText>
                                                            }
                                                        </RadzenStack>
                                                    </RadzenStack>
                                                    <RadzenBadge BadgeStyle="BadgeStyle.Light" IsPill="true"
                                                                 Text="@GetPlaylistMediaCount(playlist.Id)"
                                                                 class="count-badge" />
                                                </RadzenStack>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="empty-state">
                                        <RadzenIcon Icon="playlist_remove" class="empty-icon" />
                                        <RadzenText TextStyle="TextStyle.Caption" class="empty-text">
                                            플레이리스트가 없습니다
                                        </RadzenText>
                                    </div>
                                }
                            </RadzenStack>
                        </RadzenCard>
                    </RadzenColumn>

                    <!-- 우측: 미디어 파일 목록 -->
                    <RadzenColumn Size="12" SizeMD="7">
                        <RadzenCard class="media-card">
                            <RadzenStack Gap="0.5rem">
                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                                        <RadzenIcon Icon="audio_file" class="section-icon" />
                                        <RadzenText TextStyle="TextStyle.Body2" class="section-title">
                                            미디어 파일
                                            @if (selectedPlaylist != null)
                                            {
                                                <span class="playlist-indicator">(@selectedPlaylist.Name)</span>
                                            }
                                        </RadzenText>
                                    </RadzenStack>
                                    @if (playlistMedia.Any())
                                    {
                                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                                            <RadzenCheckBox Value="@selectAllMedia"
                                                            Change="@((bool value) => OnSelectAllMediaChanged(value))"
                                                            class="compact-checkbox" />
                                            <RadzenText TextStyle="TextStyle.Caption" class="select-all-text">전체 선택</RadzenText>
                                        </RadzenStack>
                                    }
                                </RadzenStack>

                                @if (selectedPlaylist == null)
                                {
                                    <div class="empty-state">
                                        <RadzenIcon Icon="touch_app" class="empty-icon" />
                                        <RadzenText TextStyle="TextStyle.Caption" class="empty-text">
                                            플레이리스트를 선택하세요
                                        </RadzenText>
                                    </div>
                                }
                                else if (isLoadingMedia)
                                {
                                    <div class="loading-container">
                                        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" class="slim-progress" />
                                        <RadzenText Text="미디어 로딩 중..." TextStyle="TextStyle.Caption" class="loading-text" />
                                    </div>
                                }
                                else if (playlistMedia.Any())
                                {
                                    <div class="media-container">
                                        <RadzenDataGrid Data="@playlistMedia"
                                                        TItem="Medium"
                                                        AllowAlternatingRows="false"
                                                        AllowPaging="true"
                                                        PageSize="8"
                                                        class="compact-grid">
                                            <Columns>
                                                <RadzenDataGridColumn TItem="Medium" Width="35px" TextAlign="TextAlign.Center">
                                                    <Template Context="media">
                                                        <RadzenCheckBox Value="@IsMediaSelected(media.Id)"
                                                                        Change="@((bool value) => OnMediaCheckChanged(media.Id, value))"
                                                                        class="compact-checkbox" />
                                                    </Template>
                                                </RadzenDataGridColumn>
                                                <RadzenDataGridColumn TItem="Medium" Width="30px" TextAlign="TextAlign.Center">
                                                    <Template Context="media">
                                                        <RadzenIcon Icon="audiotrack" class="media-icon" />
                                                    </Template>
                                                </RadzenDataGridColumn>
                                                <RadzenDataGridColumn TItem="Medium" Property="FileName" Title="파일명">
                                                    <Template Context="media">
                                                        <RadzenText TextStyle="TextStyle.Caption" class="media-name">@media.FileName</RadzenText>
                                                    </Template>
                                                </RadzenDataGridColumn>
                                                <RadzenDataGridColumn TItem="Medium" Property="CreatedAt" Title="등록일" Width="80px">
                                                    <Template Context="media">
                                                        <RadzenText TextStyle="TextStyle.Caption" class="media-date">@media.CreatedAt.ToString("yy.MM.dd")</RadzenText>
                                                    </Template>
                                                </RadzenDataGridColumn>
                                            </Columns>
                                        </RadzenDataGrid>
                                    </div>
                                }
                                else
                                {
                                    <div class="empty-state">
                                        <RadzenIcon Icon="library_music" class="empty-icon" />
                                        <RadzenText TextStyle="TextStyle.Caption" class="empty-text">
                                            이 플레이리스트에 미디어가 없습니다
                                        </RadzenText>
                                    </div>
                                }
                            </RadzenStack>
                        </RadzenCard>
                    </RadzenColumn>
                </RadzenRow>
            </RadzenStack>
        </div>
    }
</RadzenCard>

<style>
    /* 전문적인 패널 디자인 */
    .professional-panel {
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05) !important;
        border: 1px solid #dde2e6 !important;
        border-radius: 6px !important;
        background: white !important;
        overflow: hidden;
    }

    .panel-header {
        background: #fafbfc;
        padding: 0.625rem 0.875rem;
        cursor: pointer;
        transition: all 0.2s ease;
        border-bottom: 1px solid #e1e4e8;
        user-select: none;
    }

        .panel-header:hover {
            background: #f5f6f8;
        }

    .panel-icon.primary {
        font-size: 1rem !important;
        color: #3498db !important;
    }

    .panel-title {
        font-size: 0.875rem !important;
        font-weight: 600 !important;
        color: #2c3e50 !important;
        margin: 0 !important;
    }

    .expand-icon {
        font-size: 1rem !important;
        color: #6c757d !important;
        transition: transform 0.2s ease;
    }

    .panel-content {
        padding: 0.875rem;
        animation: slideDown 0.2s ease-out;
    }

    /* 방송 컨트롤 */
    .broadcast-controls {
        display: flex;
        align-items: center;
        gap: 0.375rem;
    }

    .control-button {
        font-size: 0.7rem !important;
        padding: 0.2rem 0.5rem !important;
        height: 24px !important;
    }

        .control-button.play {
            background: #27ae60 !important;
            border-color: #27ae60 !important;
        }

        .control-button.stop {
            background: #f39c12 !important;
            border-color: #f39c12 !important;
        }

    .progress-spinner {
        width: 16px !important;
        height: 16px !important;
    }

    .divider {
        width: 1px;
        height: 16px;
        background-color: #e1e4e8;
        margin: 0 0.25rem;
    }

    /* 방송 알림 */
    .broadcast-alert {
        padding: 0.5rem 0.625rem !important;
        background-color: #e8f4fd !important;
        border: 1px solid #b8daff !important;
        margin-bottom: 0.75rem;
    }

    .broadcast-icon {
        font-size: 0.875rem !important;
        color: #3498db !important;
    }

    .broadcast-text {
        font-size: 0.7rem !important;
        color: #2c3e50 !important;
        margin: 0 !important;
    }

    .status-badge {
        font-size: 0.6rem !important;
        padding: 2px 5px !important;
    }

        .status-badge.playing {
            animation: pulse 2s infinite;
        }

    /* 섹션 스타일 */
    .section-icon {
        font-size: 0.875rem !important;
        color: #3498db !important;
    }

    .section-title {
        font-size: 0.8rem !important;
        font-weight: 600 !important;
        color: #2c3e50 !important;
        margin: 0 !important;
    }

    .playlist-indicator {
        font-size: 0.7rem !important;
        color: #6c757d !important;
        font-weight: 400 !important;
    }

    /* 플레이리스트 카드 */
    .playlist-card, .media-card {
        padding: 0.75rem !important;
        background: white !important;
        border: 1px solid #e1e4e8 !important;
        height: 100%;
        min-height: 320px;
    }

    .playlist-container {
        max-height: 260px;
        overflow-y: auto;
        padding-right: 0.25rem;
    }

    .playlist-item {
        padding: 0.5rem;
        margin-bottom: 0.375rem;
        border-radius: 4px;
        background: #fafbfc;
        border: 1px solid #e1e4e8;
        cursor: pointer;
        transition: all 0.15s ease;
    }

        .playlist-item:hover {
            background: #f5f6f8;
            border-color: #3498db;
            transform: translateX(2px);
        }

        .playlist-item.selected {
            background: #e8f4fd;
            border-color: #3498db;
        }

    .playlist-icon {
        font-size: 0.875rem !important;
        color: #34495e !important;
    }

    .playlist-name {
        font-size: 0.75rem !important;
        font-weight: 500 !important;
        color: #2c3e50 !important;
        margin: 0 !important;
    }

    .playlist-desc {
        font-size: 0.65rem !important;
        color: #6c757d !important;
        margin: 0 !important;
    }

    .count-badge {
        font-size: 0.6rem !important;
        padding: 2px 6px !important;
    }

    /* 미디어 섹션 */
    .media-container {
        max-height: 260px;
        overflow: hidden;
    }

    .compact-checkbox {
        transform: scale(0.8);
    }

    .select-all-text {
        font-size: 0.7rem !important;
        color: #6c757d !important;
        margin: 0 !important;
    }

    .media-icon {
        font-size: 0.75rem !important;
        color: #6c757d !important;
    }

    .media-name {
        font-size: 0.7rem !important;
        color: #2c3e50 !important;
        margin: 0 !important;
    }

    .media-date {
        font-size: 0.65rem !important;
        color: #6c757d !important;
        margin: 0 !important;
    }

    /* 데이터그리드 */
    .compact-grid {
        font-size: 0.7rem !important;
    }

        .compact-grid .rz-datatable-data td {
            padding: 0.3rem 0.4rem !important;
            font-size: 0.7rem !important;
        }

        .compact-grid .rz-datatable-thead th {
            padding: 0.35rem 0.4rem !important;
            font-size: 0.7rem !important;
            font-weight: 600 !important;
            background: #fafbfc !important;
        }

        .compact-grid .rz-paginator {
            font-size: 0.65rem !important;
            padding: 0.3rem !important;
        }

            .compact-grid .rz-paginator .rz-button {
                height: 24px !important;
                min-width: 24px !important;
            }

    /* 로딩 및 빈 상태 */
    .loading-container, .empty-state {
        text-align: center;
        padding: 1.5rem 0;
    }

    .slim-progress {
        width: 80px !important;
        height: 3px !important;
        margin: 0 auto !important;
    }

    .loading-text {
        margin-top: 0.5rem !important;
        font-size: 0.65rem !important;
        color: #6c757d !important;
    }

    .empty-icon {
        font-size: 1.5rem !important;
        color: #d0d7de !important;
        margin-bottom: 0.375rem;
    }

    .empty-text {
        font-size: 0.7rem !important;
        color: #6c757d !important;
        margin: 0 !important;
    }

    /* 스크롤바 */
    .playlist-container::-webkit-scrollbar {
        width: 4px;
    }

    .playlist-container::-webkit-scrollbar-track {
        background: #f0f0f0;
        border-radius: 2px;
    }

    .playlist-container::-webkit-scrollbar-thumb {
        background: #c0c0c0;
        border-radius: 2px;
    }

        .playlist-container::-webkit-scrollbar-thumb:hover {
            background: #a0a0a0;
        }

    /* 애니메이션 */
    @@keyframes slideDown {
        from

    {
        opacity: 0;
        transform: translateY(-5px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    @@keyframes pulse {
        0%

    {
        opacity: 1;
    }

    50% {
        opacity: 0.6;
    }

    100% {
        opacity: 1;
    }

    }

    /* 다크 테마 */
    :root[data-theme='dark'] .professional-panel {
        background: #0d1117 !important;
        border-color: #30363d !important;
    }

    :root[data-theme='dark'] .panel-header {
        background: #161b22;
        border-bottom-color: #30363d;
    }

        :root[data-theme='dark'] .panel-header:hover {
            background: #1f2937;
        }

    :root[data-theme='dark'] .playlist-card,
    :root[data-theme='dark'] .media-card {
        background: #0d1117 !important;
        border-color: #30363d !important;
    }

    :root[data-theme='dark'] .playlist-item {
        background: #161b22;
        border-color: #30363d;
    }

        :root[data-theme='dark'] .playlist-item:hover {
            background: #1f2937;
        }

        :root[data-theme='dark'] .playlist-item.selected {
            background: #1f2937;
            border-color: #3498db;
        }

    :root[data-theme='dark'] .broadcast-alert {
        background-color: #1f2937 !important;
        border-color: #374151 !important;
    }

    :root[data-theme='dark'] .divider {
        background-color: #30363d;
    }

    :root[data-theme='dark'] .compact-grid .rz-datatable-thead th {
        background: #161b22 !important;
    }
</style>