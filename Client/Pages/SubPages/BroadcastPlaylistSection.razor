@using WicsPlatform.Server.Models.wics

<RadzenCard class="mt-3 collapsible-panel-container">
<!-- 패널 헤더 -->
<div @onclick="TogglePanel" 
     style="background-color: var(--rz-sidebar-background-color); padding: 0.75rem 1rem; cursor: pointer; transition: all 0.3s ease; user-select: none; border-radius: var(--rz-border-radius) var(--rz-border-radius) 0 0; border-bottom: 1px solid var(--rz-border-color);">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Style="width: 100%;">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.375rem">
                <RadzenIcon Icon="playlist_play" Style="font-size: 1.25rem; color: var(--rz-primary);" />
                <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0" Style="font-size: 0.95rem;">
                    @(Channel?.Name ?? "채널") - 플레이리스트 관리
                </RadzenText>
                @if (selectedPlaylists.Any(kvp => kvp.Value))
                {
                    <RadzenBadge BadgeStyle="BadgeStyle.Success" IsPill="true"
                                 Text="@($"{selectedPlaylists.Count(kvp => kvp.Value)}개 플레이리스트 선택됨")"
                                 Style="font-size: 0.65rem; padding: 2px 8px;" />
                }
            </RadzenStack>

            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                @* 방송 중일 때 미디어 재생/중지 버튼 표시 *@
                @if (IsBroadcasting && !IsCollapsed)
                {
                    <div @onclick:stopPropagation="true" Style="display: flex; align-items: center; gap: 0.5rem;">
                        @if (!isMediaPlaying)
                        {
                            <RadzenButton Icon="play_circle"
                                          Text="재생"
                                          ButtonStyle="ButtonStyle.Success"
                                          Size="ButtonSize.Small"
                                          Disabled="@(!HasSelectedMedia() || isMediaActionInProgress)"
                                          Click="@PlayMedia"
                                          Title="@(!HasSelectedMedia() ? "미디어를 선택하세요" : "선택된 미디어 재생")" />
                            <RadzenButton Icon="shuffle"
                                          Text="랜덤재생"
                                          ButtonStyle="ButtonStyle.Info"
                                          Size="ButtonSize.Small"
                                          Disabled="@(!HasSelectedMedia() || isMediaActionInProgress)"
                                          Click="@PlayMediaRandom"
                                          Title="선택된 미디어를 랜덤으로 재생" />
                        }
                        else
                        {
                            <RadzenButton Icon="skip_next"
                                          Text="다음"
                                          ButtonStyle="ButtonStyle.Info"
                                          Size="ButtonSize.Small"
                                          Disabled="@isMediaActionInProgress"
                                          Click="@SkipNext"
                                          Title="다음 미디어로 이동" />
                            <RadzenButton Icon="stop"
                                          Text="중지"
                                          ButtonStyle="ButtonStyle.Warning"
                                          Size="ButtonSize.Small"
                                          Disabled="@isMediaActionInProgress"
                                          Click="@StopMedia"
                                          Title="미디어 재생 중지" />
                        }

                        @if (isMediaActionInProgress)
                        {
                            <RadzenProgressBarCircular Value="100"
                                                       ShowValue="false"
                                                       Mode="ProgressBarMode.Indeterminate"
                                                       Size="ProgressBarCircularSize.ExtraSmall" />
                        }
                    </div>
                }

                <RadzenIcon Icon="@(IsCollapsed ? "expand_more" : "expand_less")"
                            Style="font-size: 1.25rem; transition: transform 0.3s ease;"
                            class="@(IsCollapsed ? "rotate-icon" : "")" />
            </RadzenStack>
        </RadzenStack>
    </div>

    <!-- 패널 내용 -->
    @if (!IsCollapsed)
    {
        <div class="panel-content" Style="padding: 1rem;">
            @* 방송 중 상태 표시 *@
            @if (IsBroadcasting)
            {
                <RadzenAlert AlertStyle="AlertStyle.Info"
                             Variant="Variant.Flat"
                             Shade="Shade.Lighter"
                             AllowClose="false"
                             Style="margin-bottom: 1rem;">
                    <RadzenStack Orientation="Orientation.Horizontal"
                                 AlignItems="AlignItems.Center"
                                 Gap="0.5rem"
                                 Wrap="FlexWrap.Wrap">
                        <RadzenIcon Icon="broadcast_on_home" Style="color: var(--rz-info);" />
                        <RadzenText TextStyle="TextStyle.Caption">
                            방송 중 - ID: <strong>@BroadcastId</strong>
                        </RadzenText>
                        @if (isMediaPlaying)
                        {
                            <RadzenBadge BadgeStyle="BadgeStyle.Success"
                                         Text="재생 중"
                                         IsPill="true"
                                         class="playing-badge-pulse" />
                        }
                        @if (HasSelectedMedia())
                        {
                            <RadzenBadge BadgeStyle="BadgeStyle.Info"
                                         Text="@($"{GetSelectedMedia().Count()}개 선택")"
                                         IsPill="true" />
                        }
                        @* 간단 플레이어: 현재 곡, 10초 뒤/앞 *@
                        @if (isMediaPlaying)
                        {
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem" Style="margin-left: auto;">
                                <RadzenIcon Icon="music_note" Style="color: var(--rz-success);" />
                                <RadzenText TextStyle="TextStyle.Caption" Style="max-width: 220px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                    @_nowPlayingText
                                </RadzenText>
                                <RadzenButton Icon="replay_10" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Click="@(()=>OnSeek(-10))" />
                                <RadzenButton Icon="forward_10" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Click="@(()=>OnSeek(10))" />
                                <RadzenText TextStyle="TextStyle.Caption" class="rz-color-secondary">@_nowPlayingTime</RadzenText>
                            </RadzenStack>
                        }
                    </RadzenStack>
                </RadzenAlert>
            }

            <RadzenRow Gap="0.75rem">
                <!-- 좌측: 플레이리스트 목록 -->
                <RadzenColumn Size="12" SizeMD="5">
                    <RadzenCard class="group-section" Style="padding: 0.75rem; position: relative;">
                        <RadzenStack Orientation="Orientation.Horizontal" 
                                     JustifyContent="JustifyContent.SpaceBetween" 
                                     AlignItems="AlignItems.Center" 
                                     class="mb-2">
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                                <RadzenIcon Icon="queue_music" Style="font-size: 0.875rem; color: var(--rz-primary);" />
                                <RadzenText TextStyle="TextStyle.Body2" class="mb-0" Style="font-weight: 600; font-size: 0.8rem;">
                                    플레이리스트 목록
                                </RadzenText>
                            </RadzenStack>
                            <RadzenButton Icon="add" 
                                          Text="추가" 
                                          Click="@OpenAddPlaylistDialog" 
                                          ButtonStyle="ButtonStyle.Light" 
                                          Size="ButtonSize.Small"
                                          Style="font-size: 0.7rem; padding: 0.25rem 0.5rem;" />
                        </RadzenStack>

                        @if (isLoadingPlaylists)
                        {
                            <div class="text-center py-2">
                                <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate"
                                                   Style="width: 60%; height: 4px; margin: 0 auto;" />
                                <RadzenText Text="플레이리스트를 불러오는 중..." TextStyle="TextStyle.Caption" class="mt-1" Style="font-size: 0.7rem;" />
                            </div>
                        }
                        else if (playlists.Any())
                        {
                            <div style="max-height: 400px; overflow-y: auto; border: 1px solid var(--rz-border); border-radius: var(--rz-border-radius); background-color: var(--rz-base-background-color);">
                                @foreach (var playlist in playlists)
                                {
                                    var isExpanded = expandedPlaylists.Contains(playlist.Id);
                                    var playlistMediaCount = GetPlaylistMediaCountInt(playlist.Id);

                                    <div>
                                        <RadzenCard class="@($"group-item {(viewingPlaylist?.Id == playlist.Id ? "viewing" : "")} {(IsPlaylistSelected(playlist.Id) ? "selected" : "")}")"
                                                    Style="margin: 3px; cursor: pointer; padding: 0.5rem; background-color: var(--rz-base-background-color);"
                                                    @onclick="@(() => ViewPlaylistDetails(playlist))">
                                        <RadzenStack Gap="0.25rem">
                                            <RadzenRow AlignItems="AlignItems.Center">
                                                <RadzenColumn Size="8">
                                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                                                        <RadzenCheckBox Value="@IsPlaylistSelected(playlist.Id)"
                                                                        Change="@((bool value) => OnPlaylistSelectionChanged(playlist.Id, value))"
                                                                        Style="width: 14px; height: 14px;"
                                                                        @onclick:stopPropagation="true" />
                                                        <RadzenIcon Icon="@(isExpanded ? "folder_open" : "folder")"
                                                                    Style="color: var(--rz-secondary); font-size: 0.875rem;" />
                                                        <RadzenText TextStyle="TextStyle.Body2" class="mb-0" Style="font-weight: 600; font-size: 0.8rem;">
                                                            @playlist.Name
                                                        </RadzenText>
                                                    </RadzenStack>
                                                </RadzenColumn>
                                                <RadzenColumn Size="4" class="text-end">
                                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.15rem">
                                                        <RadzenBadge BadgeStyle="BadgeStyle.Info" IsPill="true"
                                                                     Text="@($"{playlistMediaCount}개")"
                                                                     Style="font-size: 0.6rem; padding: 1px 6px;" />
                                                        <RadzenButton Icon="@(isExpanded ? "expand_less" : "expand_more")"
                                                                      ButtonStyle="ButtonStyle.Light"
                                                                      Variant="Variant.Flat"
                                                                      Size="ButtonSize.Small"
                                                                      class="expand-button"
                                                                      Click="@(() => TogglePlaylistExpansion(playlist.Id))"
                                                                      @onclick:stopPropagation="true"
                                                                      Title="펼치기/접기" />
                                                    </RadzenStack>
                                                </RadzenColumn>
                                            </RadzenRow>

                                            @if (!string.IsNullOrEmpty(playlist.Description))
                                            {
                                                <RadzenText TextStyle="TextStyle.Caption" class="text-muted mb-0"
                                                            Style="margin-left: 1.5rem; font-size: 0.7rem;">
                                                    @playlist.Description
                                                </RadzenText>
                                            }

                                            @* 확장된 상태에서 미디어 전체 목록 표시 *@
                                            @if (isExpanded && playlistMediaCount > 0)
                                            {
                                                <RadzenCard Variant="Variant.Outlined" Style="padding: 0.5rem; margin-top: 0.5rem;">
                                                    @{
                                                        var mediaInPlaylist = GetMediaInPlaylistSync(playlist.Id);
                                                    }
                                                    @if (mediaInPlaylist.Any())
                                                    {
                                                        <RadzenStack Gap="0.35rem" class="media-in-playlist-list">
                                                            @foreach (var media in mediaInPlaylist)
                                                            {
                                                                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center" 
                                                                           Style="padding: 0.35rem 0.5rem; border-bottom: 1px solid var(--rz-border-color);">
                                                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                                                        <RadzenIcon Icon="audiotrack" Style="font-size: 0.75rem; color: var(--rz-secondary); opacity: 0.7;" />
                                                                        <RadzenText TextStyle="TextStyle.Caption" class="mb-0" Style="font-size: 0.7rem;">@media.FileName</RadzenText>
                                                                    </RadzenStack>
                                                                </RadzenStack>
                                                            }
                                                        </RadzenStack>
                                                    }
                                                </RadzenCard>
                                            }
                                        </RadzenStack>
                                        </RadzenCard>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-3">
                                <RadzenIcon Icon="playlist_remove" Style="font-size: 2.5rem; color: var(--rz-text-disabled-color);" />
                                <RadzenText TextStyle="TextStyle.Body2" class="mt-2 mb-0">
                                    플레이리스트가 없습니다
                                </RadzenText>
                            </div>
                        }
                    </RadzenCard>
                </RadzenColumn>

                <!-- 우측: 미디어 파일 목록 -->
                <RadzenColumn Size="12" SizeMD="7">
                    <RadzenCard class="media-section" Style="padding: 0.75rem;">
                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" class="mb-2">
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                                <RadzenIcon Icon="audio_file" Style="font-size: 0.875rem; color: var(--rz-primary);" />
                                <RadzenText TextStyle="TextStyle.Body2" class="mb-0" Style="font-weight: 600; font-size: 0.8rem;">
                                    전체 미디어 목록
                                </RadzenText>
                            </RadzenStack>
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                <RadzenText TextStyle="TextStyle.Caption" class="mb-0 text-muted" Style="font-size: 0.7rem;">
                                    전체: <strong>@allMedia.Count()</strong>
                                </RadzenText>
                            </RadzenStack>
                        </RadzenStack>

                        @if (isLoadingMedia)
                        {
                            <div class="text-center py-2">
                                <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate"
                                                   Style="width: 60%; height: 4px; margin: 0 auto;" />
                                <RadzenText Text="미디어 목록을 불러오는 중..." TextStyle="TextStyle.Caption" class="mt-1" Style="font-size: 0.7rem;" />
                            </div>
                        }
                        else if (allMedia.Any())
                        {
                            <RadzenDataGrid Data="@allMedia"
                                            TItem="Medium"
                                            AllowAlternatingRows="false"
                                            AllowPaging="true"
                                            PageSize="10"
                                            Density="Density.Compact"
                                            Style="font-size: 0.75rem;">
                                <Columns>
                                    <RadzenDataGridColumn TItem="Medium" Width="40px" TextAlign="TextAlign.Center" Frozen="true">
                                        <Template Context="media">
                                            <RadzenCheckBox Value="@IsMediaSelected(media.Id)"
                                                            Change="@((bool value) => OnMediaSelectionChanged(media.Id, value))"
                                                            TValue="bool" />
                                        </Template>
                                    </RadzenDataGridColumn>
                                    <RadzenDataGridColumn TItem="Medium" Width="30px" TextAlign="TextAlign.Center" Frozen="true">
                                        <Template Context="media">
                                            <RadzenIcon Icon="audiotrack" Style="font-size: 0.75rem; color: var(--rz-secondary); opacity: 0.5;" />
                                        </Template>
                                    </RadzenDataGridColumn>
                                    <RadzenDataGridColumn TItem="Medium" Property="FileName" Title="파일명">
                                        <Template Context="media">
                                            <RadzenText TextStyle="TextStyle.Caption" class="mb-0" Style="font-size: 0.75rem; font-weight: 500;">
                                                @media.FileName
                                            </RadzenText>
                                        </Template>
                                    </RadzenDataGridColumn>
                                    <RadzenDataGridColumn TItem="Medium" Property="CreatedAt" Title="등록일" Width="90px">
                                        <Template Context="media">
                                            <RadzenText TextStyle="TextStyle.Caption" class="mb-0" Style="font-size: 0.7rem;">
                                                @media.CreatedAt.ToString("yy.MM.dd")
                                            </RadzenText>
                                        </Template>
                                    </RadzenDataGridColumn>
                                </Columns>
                            </RadzenDataGrid>
                        }
                        else
                        {
                            <div class="text-center py-3">
                                <RadzenIcon Icon="library_music" Style="font-size: 2.5rem; color: var(--rz-text-disabled-color);" />
                                <RadzenText TextStyle="TextStyle.Body2" class="mt-2 mb-0">
                                    미디어가 없습니다
                                </RadzenText>
                            </div>
                        }
                    </RadzenCard>
                </RadzenColumn>
            </RadzenRow>
            @if (selectedPlaylists.Any(kvp => kvp.Value))
            {
                <RadzenCard class="mt-2 summary-card" Style="padding: 0.5rem 0.75rem; background-color: var(--rz-primary-lighter);">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.75rem">
                            <RadzenIcon Icon="info" Style="font-size: 0.875rem; color: var(--rz-primary);" />
                            <RadzenText TextStyle="TextStyle.Caption" class="mb-0" Style="font-size: 0.75rem;">
                                <strong>선택된 플레이리스트:</strong> @string.Join(", ", playlists.Where(p => selectedPlaylists.ContainsKey(p.Id) && selectedPlaylists[p.Id]).Select(p => p.Name))
                            </RadzenText>
                        </RadzenStack>
                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                            <RadzenBadge BadgeStyle="BadgeStyle.Success" IsPill="true"
                                         Text="@($"선택된 미디어: {selectedMedia.Count(kvp => kvp.Value)}개")"
                                         Style="font-size: 0.65rem; padding: 2px 8px;" />
                            <RadzenButton Text="선택 초기화"
                                          Icon="clear"
                                          ButtonStyle="ButtonStyle.Light"
                                          Size="ButtonSize.Small"
                                          Variant="Variant.Flat"
                                          Style="height: 24px; font-size: 0.7rem; padding: 0 0.5rem;"
                                          Click="@ClearSelection" />
                        </RadzenStack>
                    </RadzenStack>
                </RadzenCard>
            }
        </div>
    }
</RadzenCard>

<style>
    .collapsible-panel-container {
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .panel-content {
        animation: slideDown 0.3s ease-out;
        background-color: var(--rz-base-background-color);
        border-radius: 0 0 var(--rz-border-radius) var(--rz-border-radius);
        border: 1px solid var(--rz-border-color);
        border-top: none;
    }

    .rotate-icon {
        transform: rotate(-90deg);
    }

    /* 섹션 스타일 */
    .group-section, .media-section {
        height: 100%;
        min-height: 450px;
    }

    /* 그룹 아이템 스타일 */
    .group-item {
        transition: all 0.2s ease;
        border: 2px solid transparent !important;
    }

        .group-item:hover:not(.selected) {
            background-color: rgba(var(--rz-primary-rgb), 0.08) !important;
            transform: translateX(2px);
            box-shadow: var(--rz-shadow-1) !important;
        }

        .group-item.viewing:not(.selected) {
            background-color: rgba(var(--rz-primary-rgb), 0.05) !important;
            border-left: 3px solid var(--rz-primary) !important;
        }

        .group-item.selected {
            background: linear-gradient(90deg, rgba(var(--rz-primary-rgb), 0.2) 0%, rgba(var(--rz-primary-rgb), 0.15) 100%) !important;
            border: 2px solid var(--rz-primary) !important;
            box-shadow: 0 0 8px rgba(var(--rz-primary-rgb), 0.3) !important;
        }

    /* 그룹 내 미디어 목록 */
    .media-in-playlist-list {
        max-height: 250px;
        overflow-y: auto;
    }

        .media-in-playlist-list::-webkit-scrollbar {
            width: 5px;
        }

        .media-in-playlist-list::-webkit-scrollbar-track {
            background: var(--rz-base-200);
            border-radius: 3px;
        }

        .media-in-playlist-list::-webkit-scrollbar-thumb {
            background: var(--rz-base-400);
            border-radius: 3px;
        }

            .media-in-playlist-list::-webkit-scrollbar-thumb:hover {
                background: var(--rz-base-500);
            }

    /* 확장 버튼 */
    .expand-button {
        min-width: 20px !important;
        padding: 2px !important;
        height: 20px !important;
    }

        .expand-button .rz-button-icon {
            font-size: 0.75rem !important;
        }

    /* 요약 카드 */
    .summary-card {
        border: 1px solid var(--rz-primary);
    }

    /* 데이터그리드 컴팩트 스타일 */
    .rz-datatable-data td {
        padding: 0.25rem 0.375rem !important;
        font-size: 0.7rem !important;
    }

    .rz-datatable-thead th {
        padding: 0.375rem 0.5rem !important;
        font-size: 0.7rem !important;
        font-weight: 600 !important;
        background-color: var(--rz-base-200) !important;
    }

    .rz-paginator {
        font-size: 0.65rem !important;
        padding: 0.25rem !important;
    }

        .rz-paginator .rz-button {
            height: 22px !important;
            min-width: 22px !important;
        }

    /* 스크롤바 스타일링 */
    .group-section > div::-webkit-scrollbar,
    .media-section > div::-webkit-scrollbar {
        width: 6px;
    }

    .group-section > div::-webkit-scrollbar-track,
    .media-section > div::-webkit-scrollbar-track {
        background: var(--rz-base-200);
        border-radius: 3px;
    }

    .group-section > div::-webkit-scrollbar-thumb,
    .media-section > div::-webkit-scrollbar-thumb {
        background: var(--rz-base-400);
        border-radius: 3px;
    }

        .group-section > div::-webkit-scrollbar-thumb:hover,
        .media-section > div::-webkit-scrollbar-thumb:hover {
            background: var(--rz-base-500);
        }

    /* 재생 중 배지 애니메이션 */
    .playing-badge-pulse {
        animation: pulse 2s infinite;
    }

    /* 애니메이션 */
    @@keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes pulse {
        0%, 100% {
            opacity: 1;
        }

        50% {
            opacity: 0.6;
        }
    }
</style>