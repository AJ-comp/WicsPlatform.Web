@attribute [Authorize]
@using System.Linq

<RadzenStack Gap="1rem" class="schedule-dialog">
    <!-- 헤더 섹션 -->
    <RadzenCard class="dialog-header-card">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem">
            <div class="header-icon-wrapper">
                <RadzenIcon Icon="event" class="header-icon" />
            </div>
            <RadzenStack Gap="0.25rem">
                <RadzenText TextStyle="TextStyle.H6" class="header-title">새 예약 방송 만들기</RadzenText>
                <RadzenText TextStyle="TextStyle.Caption" class="header-subtitle">
                    자동 방송 스케줄을 생성하고 설정합니다
                </RadzenText>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <!-- 폼 섹션 -->
    <RadzenTemplateForm TItem="ScheduleFormModel" Data="@model" Submit="@FormSubmit">
        <RadzenStack Gap="1.25rem">
            <!-- 에러 알림 -->
            @if (errorVisible)
            {
                <RadzenAlert AlertStyle="AlertStyle.Danger" 
                             Variant="Variant.Flat" 
                             Shade="Shade.Lighter"
                             AllowClose="false">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                        <RadzenIcon Icon="error_outline" />
                        <RadzenText>@error</RadzenText>
                    </RadzenStack>
                </RadzenAlert>
            }

            <!-- 기본 정보 섹션 -->
            <RadzenFieldset>
                <HeaderTemplate>
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                        <RadzenIcon Icon="info" Style="font-size: 1.2rem;" />
                        <RadzenText TextStyle="TextStyle.Subtitle1" TagName="TagName.H3">기본 정보</RadzenText>
                    </RadzenStack>
                </HeaderTemplate>
                <ChildContent>
                    <RadzenStack Gap="1rem">
                        <!-- 스케줄명 필드 -->
                        <RadzenFormField Text="스케줄명" Variant="Variant.Outlined">
                            <ChildContent>
                                <RadzenTextBox @bind-Value="@model.Name" 
                                               Name="Name"
                                               Placeholder="예: 오전 정시 안내방송"
                                               class="w-100" />
                            </ChildContent>
                            <Helper>
                                <RadzenText TextStyle="TextStyle.Caption" class="field-helper">
                                    스케줄을 쉽게 식별할 수 있는 이름을 입력하세요
                                </RadzenText>
                            </Helper>
                        </RadzenFormField>
                        <RadzenRequiredValidator Component="Name" 
                                                 Text="스케줄명은 필수 입력 항목입니다" />

                        <!-- 설명 필드 -->
                        <RadzenFormField Text="설명 (선택)" Variant="Variant.Outlined">
                            <ChildContent>
                                <RadzenTextArea @bind-Value="@model.Description" 
                                                Name="Description"
                                                Rows="3"
                                                Placeholder="스케줄의 용도나 특징을 간단히 설명해주세요"
                                                class="w-100" />
                            </ChildContent>
                            <Helper>
                                <RadzenText TextStyle="TextStyle.Caption" class="field-helper">
                                    예약 방송의 목적이나 내용을 간략히 입력할 수 있습니다
                                </RadzenText>
                            </Helper>
                        </RadzenFormField>
                    </RadzenStack>
                </ChildContent>
            </RadzenFieldset>

            <!-- 방송 시간 설정 섹션 -->
            <RadzenFieldset>
                <HeaderTemplate>
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                        <RadzenIcon Icon="schedule" Style="font-size: 1.2rem;" />
                        <RadzenText TextStyle="TextStyle.Subtitle1" TagName="TagName.H3">방송 시간 설정</RadzenText>
                    </RadzenStack>
                </HeaderTemplate>
                <ChildContent>
                    <RadzenStack Gap="1rem">
                        <RadzenRow Gap="1rem">
                            <!-- 시작 시간 필드 -->
                            <RadzenColumn Size="12" SizeMD="6">
                                <RadzenFormField Text="시작 시간" Variant="Variant.Outlined">
                                    <ChildContent>
                                        <RadzenDatePicker @bind-Value="@model.StartTime"
                                                          ShowTime="true"
                                                          TimeOnly="true"
                                                          DateFormat="HH:mm"
                                                          HoursStep="1"
                                                          MinutesStep="1"
                                                          Name="StartTime"
                                                          class="w-100" />
                                    </ChildContent>
                                </RadzenFormField>
                                <RadzenRequiredValidator Component="StartTime"
                                                         Text="시작 시간은 필수 입력 항목입니다" />
                            </RadzenColumn>

                            <!-- 반복 횟수 필드 -->
                            <RadzenColumn Size="12" SizeMD="6">
                                <RadzenFormField Variant="Variant.Outlined">
                                    <TextTemplate>
                                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                                            <RadzenText>반복 횟수</RadzenText>
                                            <RadzenIcon Icon="help_outline" 
                                                        Style="font-size: 1rem; color: var(--rz-text-secondary-color); cursor: help;" 
                                                        title="0: 무한 반복, 1~255: 지정 횟수만큼 반복" />
                                        </RadzenStack>
                                    </TextTemplate>
                                    <ChildContent>
                                        <RadzenNumeric @bind-Value="@model.RepeatCount"
                                                       Min="0"
                                                       Max="255"
                                                       ShowUpDown="true"
                                                       Format="0"
                                                       Name="RepeatCount"
                                                       class="w-100" />
                                    </ChildContent>
                                    <Helper>
                                        <RadzenText TextStyle="TextStyle.Caption" class="field-helper">
                                            0으로 설정하면 무한 반복됩니다
                                        </RadzenText>
                                    </Helper>
                                </RadzenFormField>
                            </RadzenColumn>
                        </RadzenRow>

                        <!-- 요일 선택 -->
                        <RadzenFormField Text="반복 요일" Variant="Variant.Outlined">
                            <ChildContent>
                                <RadzenStack Gap="0.75rem">
                                    <div class="weekday-selector">
                                        @foreach (var day in weekdays)
                                        {
                                            <div class="weekday-item @(GetWeekdayValue(day.Key) ? "selected" : "")"
                                                 @onclick="@(() => ToggleWeekday(day.Key))">
                                                <div class="weekday-checkbox">
                                                    @if (GetWeekdayValue(day.Key))
                                                    {
                                                        <RadzenIcon Icon="check" class="check-icon" />
                                                    }
                                                </div>
                                                <span class="weekday-label">@day.Value</span>
                                            </div>
                                        }
                                    </div>

                                    <!-- 빠른 선택 버튼 -->
                                    <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center" class="quick-select-buttons">
                                        <RadzenButton Text="매일"
                                                      Icon="calendar_today"
                                                      ButtonStyle="ButtonStyle.Light"
                                                      Size="ButtonSize.Small"
                                                      Variant="Variant.Outlined"
                                                      Click="@SelectAllDays" />
                                        <RadzenButton Text="평일"
                                                      Icon="work"
                                                      ButtonStyle="ButtonStyle.Light"
                                                      Size="ButtonSize.Small"
                                                      Variant="Variant.Outlined"
                                                      Click="@SelectWeekdays" />
                                        <RadzenButton Text="주말"
                                                      Icon="weekend"
                                                      ButtonStyle="ButtonStyle.Light"
                                                      Size="ButtonSize.Small"
                                                      Variant="Variant.Outlined"
                                                      Click="@SelectWeekend" />
                                        <RadzenButton Text="초기화"
                                                      Icon="clear"
                                                      ButtonStyle="ButtonStyle.Light"
                                                      Size="ButtonSize.Small"
                                                      Variant="Variant.Outlined"
                                                      Click="@ClearWeekdays" />
                                    </RadzenStack>
                                </RadzenStack>
                            </ChildContent>
                            <Helper>
                                <RadzenText TextStyle="TextStyle.Caption" class="field-helper">
                                    방송을 실행할 요일을 선택하세요 (최소 1개 이상 필수)
                                </RadzenText>
                            </Helper>
                        </RadzenFormField>
                    </RadzenStack>
                </ChildContent>
            </RadzenFieldset>

            <!-- 오디오 설정 섹션 -->
            <RadzenFieldset>
                <HeaderTemplate>
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                        <RadzenIcon Icon="tune" Style="font-size: 1.2rem;" />
                        <RadzenText TextStyle="TextStyle.Subtitle1" TagName="TagName.H3">오디오 설정</RadzenText>
                    </RadzenStack>
                </HeaderTemplate>
                <ChildContent>
                    <RadzenStack Gap="1rem">
                        <RadzenRow Gap="1rem">
                            <!-- 샘플레이트 필드 -->
                            <RadzenColumn Size="12" SizeMD="6">
                                <RadzenFormField Text="샘플레이트" Variant="Variant.Outlined">
                                    <ChildContent>
                                        <RadzenDropDown @bind-Value="@model.SampleRate"
                                                        Data="@sampleRates"
                                                        TextProperty="Text"
                                                        ValueProperty="Value"
                                                        Name="SampleRate"
                                                        class="w-100" />
                                    </ChildContent>
                                </RadzenFormField>
                            </RadzenColumn>

                            <!-- 오디오 채널 필드 -->
                            <RadzenColumn Size="12" SizeMD="6">
                                <RadzenFormField Text="오디오 채널" Variant="Variant.Outlined">
                                    <ChildContent>
                                        <RadzenDropDown @bind-Value="@model.ChannelCount"
                                                        Data="@audioChannels"
                                                        TextProperty="Text"
                                                        ValueProperty="Value"
                                                        Name="ChannelCount"
                                                        class="w-100" />
                                    </ChildContent>
                                </RadzenFormField>
                            </RadzenColumn>
                        </RadzenRow>

                        <!-- 볼륨 설정 -->
                        <RadzenFormField Variant="Variant.Outlined">
                            <TextTemplate>
                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                    <RadzenText>방송 볼륨</RadzenText>
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" IsPill="true" Text="@GetVolumePercentText()" />
                                </RadzenStack>
                            </TextTemplate>
                            <ChildContent>
                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.75rem">
                                    <RadzenIcon Icon="volume_mute" Style="color: var(--rz-text-secondary-color);" />
                                    <RadzenSlider @bind-Value="@model.Volume"
                                                  Min="0"
                                                  Max="1"
                                                  Step="0.01"
                                                  class="w-100" />
                                    <RadzenIcon Icon="volume_up" Style="color: var(--rz-primary);" />
                                </RadzenStack>
                            </ChildContent>
                            <Helper>
                                <RadzenText TextStyle="TextStyle.Caption" class="field-helper">
                                    방송 시 출력될 볼륨을 조절합니다
                                </RadzenText>
                            </Helper>
                        </RadzenFormField>
                    </RadzenStack>
                </ChildContent>
            </RadzenFieldset>

            <!-- 추가 정보 섹션 -->
            <RadzenCard class="info-card" Variant="Variant.Outlined">
                <RadzenStack Orientation="Orientation.Horizontal" Gap="0.75rem" AlignItems="AlignItems.Start">
                    <RadzenIcon Icon="lightbulb" class="info-icon" />
                    <RadzenStack Gap="0.5rem">
                        <RadzenText TextStyle="TextStyle.Subtitle2" class="info-title">예약 방송 안내</RadzenText>
                        <RadzenText TextStyle="TextStyle.Caption" class="info-subtitle">콘텐츠와 스피커는 생성 후 편집 화면에서 설정하세요</RadzenText>
                        <RadzenStack Gap="0.25rem" Style="margin-top: 0.5rem;">
                            <RadzenText TextStyle="TextStyle.Caption">• 설정된 시간에 자동으로 방송이 시작됩니다</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">• 반복 횟수를 0으로 설정하면 무한 반복됩니다</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">• 선택한 요일에만 방송이 실행됩니다</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">• 미디어와 TTS를 함께 설정할 수 있습니다</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">• 생성된 스케줄은 언제든지 수정 가능합니다</RadzenText>
                        </RadzenStack>
                    </RadzenStack>
                </RadzenStack>
            </RadzenCard>

            <!-- 액션 버튼 섹션 -->
            <RadzenStack Orientation="Orientation.Horizontal" 
                         JustifyContent="JustifyContent.End" 
                         Gap="0.75rem"
                         class="dialog-actions">
                <RadzenButton ButtonStyle="ButtonStyle.Light"
                              Text="취소"
                              Icon="close"
                              Click="@CancelClick"
                              Variant="Variant.Outlined"
                              Disabled="@isProcessing" />
                @if (isProcessing)
                {
                    <RadzenButton ButtonType="ButtonType.Submit"
                                  ButtonStyle="ButtonStyle.Primary"
                                  Text="생성 중..."
                                  Icon="sync"
                                  IsBusy="true"
                                  Disabled="true" />
                }
                else
                {
                    <RadzenButton ButtonType="ButtonType.Submit"
                                  ButtonStyle="ButtonStyle.Primary"
                                  Icon="check_circle"
                                  Text="스케줄 생성" />
                }
            </RadzenStack>
        </RadzenStack>
    </RadzenTemplateForm>
</RadzenStack>

<style>
    /* 메인 컨테이너 */
    .schedule-dialog {
        padding: 0;
        width: 100%;
        max-width: 700px;
    }

    /* 헤더 카드 */
    .dialog-header-card {
        background: var(--rz-primary) !important;
        color: white !important;
        border: none !important;
    }

    .header-icon-wrapper {
        width: 3rem;
        height: 3rem;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 0.75rem;
        backdrop-filter: blur(10px);
    }

    .header-icon {
        font-size: 1.75rem !important;
        color: white !important;
    }

    .dialog-header-card .header-title {
        color: white !important;
        margin: 0 !important;
        font-weight: 600 !important;
    }

    .dialog-header-card .header-subtitle {
        color: rgba(255, 255, 255, 0.9) !important;
        opacity: 0.95;
    }

    /* 필드 헬퍼 텍스트 */
    .field-helper {
        color: var(--rz-text-secondary-color);
        opacity: 0.8;
    }

    /* 정보 카드 */
    .info-card {
        background-color: var(--rz-base-background-color) !important;
        border-color: var(--rz-border-color) !important;
    }

    .info-icon {
        color: var(--rz-warning) !important;
        font-size: 1.5rem !important;
        margin-top: 0.125rem;
    }

    .info-title {
        color: var(--rz-text-color) !important;
        font-weight: 600 !important;
        margin: 0 !important;
    }

    .info-subtitle {
        color: var(--rz-text-secondary-color) !important;
        font-weight: 500 !important;
    }

    .info-card .rz-text {
        color: var(--rz-text-secondary-color) !important;
        line-height: 1.6 !important;
    }

    /* 요일 선택 */
    .weekday-selector {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 0.5rem;
    }

    .weekday-item {
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 0.875rem 0.5rem;
        background: var(--rz-base-background-color);
        border: 2px solid var(--rz-border-color);
        border-radius: 0.625rem;
        cursor: pointer;
        transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
        overflow: hidden;
    }

        .weekday-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, transparent 0%, rgba(var(--rz-primary-rgb), 0.05) 100%);
            opacity: 0;
            transition: opacity 0.25s;
        }

        .weekday-item:hover {
            border-color: var(--rz-primary);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(var(--rz-primary-rgb), 0.15);
        }

        .weekday-item:hover::before {
            opacity: 1;
        }

        .weekday-item.selected {
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #a855f7 100%) !important;
            border-color: #6366f1 !important;
            box-shadow: 0 8px 24px rgba(99, 102, 241, 0.4) !important;
            transform: scale(1.05) !important;
        }

        .weekday-item.selected::before {
            opacity: 0;
        }

    .weekday-checkbox {
        width: 2rem;
        height: 2rem;
        border: 2.5px solid var(--rz-border-color);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 0.5rem;
        background: var(--rz-base-background-color);
        transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .weekday-item:hover .weekday-checkbox {
            border-color: #6366f1;
            box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
            transform: scale(1.05);
        }

    .weekday-item.selected .weekday-checkbox {
        background: #ffffff !important;
        border-color: #ffffff !important;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2) !important;
        transform: scale(1.15) !important;
    }

    .check-icon {
        font-size: 1.2rem !important;
        color: #6366f1 !important;
        font-weight: 900 !important;
        animation: checkPop 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    @@keyframes checkPop {
        0% {
            transform: scale(0) rotate(-45deg);
            opacity: 0;
        }
        50% {
            transform: scale(1.3) rotate(10deg);
        }
        100% {
            transform: scale(1) rotate(0deg);
            opacity: 1;
        }
    }

    .weekday-label {
        font-size: 0.85rem;
        font-weight: 700;
        color: var(--rz-text-color);
        letter-spacing: 0.03em;
        transition: all 0.25s;
        text-transform: uppercase;
    }

    .weekday-item.selected .weekday-label {
        color: #ffffff !important;
        font-weight: 800 !important;
        text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3) !important;
        transform: scale(1.05);
    }

    /* 빠른 선택 버튼 */
    .quick-select-buttons .rz-button {
        font-size: 0.75rem !important;
    }

    /* 액션 버튼 영역 */
    .dialog-actions {
        padding-top: 1rem;
        border-top: 1px solid var(--rz-border-color);
    }

    /* 전체 너비 클래스 */
    .w-100 {
        width: 100%;
    }

    /* 부드러운 페이드인 애니메이션 */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .schedule-dialog {
        animation: fadeInUp 0.3s ease-out;
    }

    /* Radzen 컴포넌트 오버라이드 */
    .schedule-dialog .rz-button {
        font-weight: 500;
    }

    /* FormField 스타일 개선 */
    .schedule-dialog .rz-form-field {
        margin-bottom: 0;
    }

    /* Fieldset 스타일 */
    .schedule-dialog .rz-fieldset {
        border-color: var(--rz-border-color) !important;
    }

    .schedule-dialog .rz-fieldset-header {
        background: var(--rz-base-background-color) !important;
        color: var(--rz-text-color) !important;
        font-weight: 600 !important;
    }

    /* 반응형 디자인 */
    @@media (max-width: 768px) {
        .weekday-selector {
            grid-template-columns: repeat(4, 1fr);
        }
    }
</style>
