@using WicsPlatform.Server.Models.wics
@using WicsPlatform.Shared
@implements IDisposable

<RadzenStack Gap="0.75rem" Style="width: 100%; min-width: 500px;">
    <!-- 볼륨 컨트롤 그리드 -->
    <RadzenRow Gap="0.5rem">
        <!-- 마이크 볼륨 -->
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenCard class="volume-card">
                <RadzenStack Gap="0.375rem">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                            <RadzenIcon Icon="mic" class="volume-icon info" />
                            <RadzenText TextStyle="TextStyle.Caption" class="volume-title">마이크</RadzenText>
                        </RadzenStack>
                        <RadzenBadge BadgeStyle="BadgeStyle.Info" IsPill="true" Text="@($"{micVolume}%")" class="volume-badge" />
                    </RadzenStack>

                    <RadzenSlider @bind-Value="@micVolume"
                                  TValue="int"
                                  Min="0"
                                  Max="100"
                                  Step="1"
                                  Change="@((int value) => UpdateVolume("mic", value))"
                                  class="volume-slider" />

                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.Caption" class="volume-label">0%</RadzenText>
                        <RadzenText TextStyle="TextStyle.Caption" class="volume-label">100%</RadzenText>
                    </RadzenStack>
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>

        <!-- TTS 볼륨 -->
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenCard class="volume-card">
                <RadzenStack Gap="0.375rem">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                            <RadzenIcon Icon="record_voice_over" class="volume-icon success" />
                            <RadzenText TextStyle="TextStyle.Caption" class="volume-title">TTS</RadzenText>
                        </RadzenStack>
                        <RadzenBadge BadgeStyle="BadgeStyle.Success" IsPill="true" Text="@($"{ttsVolume}%")" class="volume-badge" />
                    </RadzenStack>

                    <RadzenSlider @bind-Value="@ttsVolume"
                                  TValue="int"
                                  Min="0"
                                  Max="100"
                                  Step="1"
                                  Change="@((int value) => UpdateVolume("tts", value))"
                                  class="volume-slider" />

                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.Caption" class="volume-label">0%</RadzenText>
                        <RadzenText TextStyle="TextStyle.Caption" class="volume-label">100%</RadzenText>
                    </RadzenStack>
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>

        <!-- 미디어 볼륨 -->
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenCard class="volume-card">
                <RadzenStack Gap="0.375rem">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                            <RadzenIcon Icon="library_music" class="volume-icon warning" />
                            <RadzenText TextStyle="TextStyle.Caption" class="volume-title">미디어</RadzenText>
                        </RadzenStack>
                        <RadzenBadge BadgeStyle="BadgeStyle.Warning" IsPill="true" Text="@($"{mediaVolume}%")" class="volume-badge" />
                    </RadzenStack>

                    <RadzenSlider @bind-Value="@mediaVolume"
                                  TValue="int"
                                  Min="0"
                                  Max="100"
                                  Step="1"
                                  Change="@((int value) => UpdateVolume("media", value))"
                                  class="volume-slider" />

                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.Caption" class="volume-label">0%</RadzenText>
                        <RadzenText TextStyle="TextStyle.Caption" class="volume-label">100%</RadzenText>
                    </RadzenStack>
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>

        <!-- 전체 볼륨 -->
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenCard class="volume-card master">
                <RadzenStack Gap="0.375rem">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                            <RadzenIcon Icon="volume_up" class="volume-icon primary" />
                            <RadzenText TextStyle="TextStyle.Caption" class="volume-title">마스터</RadzenText>
                        </RadzenStack>
                        <RadzenBadge BadgeStyle="BadgeStyle.Primary" IsPill="true" Text="@($"{globalVolume}%")" class="volume-badge" />
                    </RadzenStack>

                    <RadzenSlider @bind-Value="@globalVolume"
                                  TValue="int"
                                  Min="0"
                                  Max="100"
                                  Step="1"
                                  Change="@((int value) => UpdateVolume("global", value))"
                                  class="volume-slider master" />

                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.Caption" class="volume-label">0%</RadzenText>
                        <RadzenText TextStyle="TextStyle.Caption" class="volume-label">100%</RadzenText>
                    </RadzenStack>
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>

    <!-- 미리 설정된 프리셋 -->
    <RadzenCard class="preset-card">
        <RadzenStack Gap="0.5rem">
            <RadzenText TextStyle="TextStyle.Caption" class="preset-title">빠른 프리셋</RadzenText>
            <RadzenStack Orientation="Orientation.Horizontal" Gap="0.375rem" Wrap="FlexWrap.Wrap">
                <RadzenButton Text="음악 모드"
                              Icon="music_note"
                              ButtonStyle="ButtonStyle.Light"
                              Size="ButtonSize.Small"
                              class="preset-button"
                              Click="@(() => ApplyPreset("music"))" />
                <RadzenButton Text="음성 모드"
                              Icon="mic"
                              ButtonStyle="ButtonStyle.Light"
                              Size="ButtonSize.Small"
                              class="preset-button"
                              Click="@(() => ApplyPreset("voice"))" />
                <RadzenButton Text="균형 모드"
                              Icon="equalizer"
                              ButtonStyle="ButtonStyle.Light"
                              Size="ButtonSize.Small"
                              class="preset-button"
                              Click="@(() => ApplyPreset("balanced"))" />
                <RadzenButton Text="조용히"
                              Icon="volume_down"
                              ButtonStyle="ButtonStyle.Light"
                              Size="ButtonSize.Small"
                              class="preset-button"
                              Click="@(() => ApplyPreset("quiet"))" />
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    @if (_hasUnsavedChanges)
    {
        <RadzenAlert AlertStyle="AlertStyle.Warning"
                     Variant="Variant.Flat"
                     Size="AlertSize.Small"
                     class="unsaved-alert">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.375rem">
                <RadzenIcon Icon="warning" class="alert-icon" />
                <RadzenText TextStyle="TextStyle.Caption" class="alert-text">
                    볼륨 설정이 변경되었습니다. 변경사항을 저장하려면 '설정 저장' 버튼을 클릭하세요.
                </RadzenText>
            </RadzenStack>
        </RadzenAlert>
    }

    <!-- 액션 버튼 -->
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
        <RadzenButton Text="초기화"
                      Icon="refresh"
                      ButtonStyle="ButtonStyle.Light"
                      Size="ButtonSize.Small"
                      class="action-button"
                      Click="@ResetVolumes" />
        <RadzenButton Text="취소"
                      Icon="close"
                      ButtonStyle="ButtonStyle.Light"
                      Size="ButtonSize.Small"
                      class="action-button"
                      Click="@Cancel" />
        <RadzenButton Text="설정 저장"
                      Icon="save"
                      ButtonStyle="@(_hasUnsavedChanges ? ButtonStyle.Warning : ButtonStyle.Primary)"
                      Size="ButtonSize.Small"
                      class="action-button primary"
                      Click="@SaveVolumes"
                      IsBusy="@isSavingVolumes" />
    </RadzenStack>
</RadzenStack>

<style>
    /* 볼륨 카드 */
    .volume-card {
        padding: 0.75rem !important;
        background: rgba(var(--rz-primary-rgb), 0.03) !important;
        border: 1px solid var(--rz-border-color) !important;
        border-radius: var(--rz-border-radius) !important;
        height: 100%;
        transition: all 0.2s ease;
    }

        .volume-card:hover {
            background: rgba(var(--rz-primary-rgb), 0.06) !important;
            box-shadow: var(--rz-shadow-2) !important;
            transform: translateY(-2px);
        }

        .volume-card.master {
            background: rgba(var(--rz-primary-rgb), 0.08) !important;
            border: 2px solid var(--rz-primary) !important;
            box-shadow: 0 0 0 1px rgba(var(--rz-primary-rgb), 0.2) !important;
        }

    .volume-icon {
        font-size: 0.875rem !important;
    }

        .volume-icon.info {
            color: var(--rz-info) !important;
        }

        .volume-icon.success {
            color: var(--rz-success) !important;
        }

        .volume-icon.warning {
            color: var(--rz-warning) !important;
        }

        .volume-icon.primary {
            color: var(--rz-primary) !important;
        }

    .volume-title {
        font-size: 0.75rem !important;
        font-weight: 600 !important;
        margin: 0 !important;
    }

    .volume-badge {
        font-size: 0.65rem !important;
        padding: 2px 6px !important;
        font-weight: 600 !important;
    }

    /* 볼륨 슬라이더 */
    .volume-slider {
        margin: 0.5rem 0 !important;
    }

        .volume-slider .rz-slider-horizontal .rz-slider-track {
            height: 6px !important;
            background-color: var(--rz-base-300, rgba(0,0,0,0.1)) !important;
            border-radius: 3px !important;
        }

        .volume-slider .rz-slider-horizontal .rz-slider-range {
            height: 6px !important;
            background: linear-gradient(90deg, var(--rz-primary), var(--rz-primary-light)) !important;
            border-radius: 3px !important;
        }

        .volume-slider.master .rz-slider-horizontal .rz-slider-range {
            background: linear-gradient(90deg, var(--rz-primary), var(--rz-primary-dark)) !important;
        }

        .volume-slider .rz-slider-handle {
            width: 16px !important;
            height: 16px !important;
            top: -5px !important;
            background-color: white !important;
            border: 3px solid var(--rz-primary) !important;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2) !important;
            transition: all 0.2s ease !important;
        }

            .volume-slider .rz-slider-handle:hover {
                transform: scale(1.1);
                box-shadow: 0 3px 8px rgba(0, 0, 0, 0.3) !important;
            }

        .volume-slider.master .rz-slider-handle {
            border-width: 4px !important;
            box-shadow: 0 0 0 2px rgba(var(--rz-primary-rgb), 0.2), 0 2px 6px rgba(0, 0, 0, 0.2) !important;
        }

    .volume-label {
        font-size: 0.65rem !important;
        color: var(--rz-text-secondary-color) !important;
        margin: 0 !important;
        font-weight: 500;
    }

    /* 프리셋 카드 */
    .preset-card {
        padding: 0.75rem !important;
        background: rgba(var(--rz-secondary-rgb, 108, 117, 125), 0.05) !important;
        border: 1px solid var(--rz-border-color) !important;
        border-radius: var(--rz-border-radius) !important;
    }

    .preset-title {
        font-size: 0.75rem !important;
        font-weight: 600 !important;
        margin: 0 0 0.5rem 0 !important;
    }

    .preset-button {
        font-size: 0.7rem !important;
        padding: 0.375rem 0.625rem !important;
        height: 30px !important;
        border-radius: var(--rz-border-radius) !important;
        transition: all 0.2s ease !important;
    }

        .preset-button:hover {
            transform: translateY(-1px);
            box-shadow: var(--rz-shadow-2) !important;
        }

        .preset-button .rz-button-icon {
            font-size: 0.875rem !important;
        }

    /* 액션 버튼 */
    .action-button {
        font-size: 0.75rem !important;
        padding: 0.375rem 0.875rem !important;
        height: 32px !important;
        border-radius: var(--rz-border-radius) !important;
        transition: all 0.2s ease !important;
    }

        .action-button:hover {
            transform: translateY(-1px);
        }

        .action-button.primary {
            background: var(--rz-primary) !important;
            border-color: var(--rz-primary) !important;
            color: white !important;
            font-weight: 500 !important;
            box-shadow: var(--rz-shadow-1) !important;
        }

            .action-button.primary:hover {
                opacity: 0.9;
                box-shadow: var(--rz-shadow-3) !important;
            }

    /* 경고 알림 */
    .unsaved-alert {
        padding: 0.625rem 0.875rem !important;
        background-color: rgba(var(--rz-warning-rgb), 0.1) !important;
        border: 1px solid rgba(var(--rz-warning-rgb), 0.3) !important;
        border-radius: var(--rz-border-radius) !important;
    }

    .alert-icon {
        font-size: 1rem !important;
        color: var(--rz-warning) !important;
    }

    .alert-text {
        font-size: 0.75rem !important;
        margin: 0 !important;
        line-height: 1.4;
    }
</style>