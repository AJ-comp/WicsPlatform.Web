@using WicsPlatform.Server.Models.wics

<RadzenCard class="audio-settings-dialog">
    <RadzenStack Gap="0.75rem">
        <!-- 다이얼로그 헤더 -->
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.375rem">
            <RadzenIcon Icon="tune" class="dialog-icon" />
            <RadzenText TextStyle="TextStyle.Body1" class="dialog-title">
                오디오 설정
            </RadzenText>
        </RadzenStack>

        <RadzenRow Gap="0.5rem">
            <RadzenColumn Size="12" SizeMD="6">
                <RadzenFormField Text="샘플레이트" class="compact-form-field">
                    <RadzenDropDown @bind-Value="PreferredSampleRate"
                                    Data="@sampleRateOptions"
                                    TextProperty="Text"
                                    ValueProperty="Value"
                                    Disabled="@IsBroadcasting"
                                    class="compact-dropdown" />
                </RadzenFormField>
            </RadzenColumn>

            <RadzenColumn Size="12" SizeMD="6">
                <RadzenFormField Text="채널" class="compact-form-field">
                    <RadzenDropDown @bind-Value="PreferredChannels"
                                    Data="@channelOptions"
                                    TextProperty="Text"
                                    ValueProperty="Value"
                                    Disabled="@IsBroadcasting"
                                    class="compact-dropdown" />
                </RadzenFormField>
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow Gap="0.5rem">
            <RadzenColumn Size="12" SizeMD="6">
                <RadzenFormField Text="현재 설정" class="compact-form-field">
                    <RadzenTextBox Value="@($"{CurrentSampleRate}Hz, {CurrentChannels}ch")"
                                   ReadOnly="true"
                                   class="compact-input readonly" />
                </RadzenFormField>
            </RadzenColumn>

            <RadzenColumn Size="12" SizeMD="6">
                <RadzenFormField Text="상태" class="compact-form-field">
                    <RadzenBadge BadgeStyle="@(IsBroadcasting? BadgeStyle.Success: BadgeStyle.Light)"
                                 IsPill="true"
                                 Text="@(IsBroadcasting ? "방송 중" : "대기 중")"
                                 class="status-indicator" />
                </RadzenFormField>
            </RadzenColumn>
        </RadzenRow>

        @if (!IsBroadcasting)
        {
            <RadzenAlert AlertStyle="AlertStyle.Info" Variant="Variant.Flat" Size="AlertSize.Small" class="info-alert">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.375rem">
                    <RadzenIcon Icon="info" class="alert-icon" />
                    <RadzenText TextStyle="TextStyle.Caption" class="alert-text">
                        설정 변경은 방송 시작 전에만 가능합니다. 변경된 설정은 다음 방송부터 적용됩니다.
                    </RadzenText>
                </RadzenStack>
            </RadzenAlert>
        }
        else
        {
            <RadzenAlert AlertStyle="AlertStyle.Warning" Variant="Variant.Flat" Size="AlertSize.Small" class="warning-alert">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.375rem">
                    <RadzenIcon Icon="warning" class="alert-icon" />
                    <RadzenText TextStyle="TextStyle.Caption" class="alert-text">
                        방송 중에는 오디오 설정을 변경할 수 없습니다.
                    </RadzenText>
                </RadzenStack>
            </RadzenAlert>
        }

        <!-- 액션 버튼 -->
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
            <RadzenButton Text="취소"
                          Icon="close"
                          ButtonStyle="ButtonStyle.Light"
                          Size="ButtonSize.Small"
                          Click="@Cancel"
                          class="dialog-button" />
            <RadzenButton Text="적용"
                          Icon="check"
                          ButtonStyle="ButtonStyle.Primary"
                          Size="ButtonSize.Small"
                          Click="@Apply"
                          Disabled="@IsBroadcasting"
                          class="dialog-button primary" />
        </RadzenStack>
    </RadzenStack>
</RadzenCard>

<style>
    .audio-settings-dialog {
        padding: 1rem !important;
    }

    .dialog-icon {
        font-size: 1.125rem !important;
        color: var(--rz-primary) !important;
    }

    .dialog-title {
        font-size: 1rem !important;
        font-weight: 600 !important;
        margin: 0 !important;
    }

    .compact-form-field {
        margin-bottom: 0 !important;
    }

        .compact-form-field label {
            font-size: 0.7rem !important;
            margin-bottom: 0.25rem !important;
            color: var(--rz-text-color) !important;
            font-weight: 500 !important;
        }

    .compact-input, .compact-dropdown {
        height: 32px !important;
        font-size: 0.75rem !important;
        padding: 0.25rem 0.5rem !important;
        background: var(--rz-base-background-color) !important;
        border: 1px solid var(--rz-border-color) !important;
        color: var(--rz-text-color) !important;
    }

    /* 드롭다운 패널 항목 크기 조정 */
    .compact-dropdown .rz-dropdown-panel {
        font-size: 0.75rem !important;
    }

    .compact-dropdown .rz-dropdown-item {
        font-size: 0.75rem !important;
        padding: 0.375rem 0.5rem !important;
        min-height: 28px !important;
    }

        .compact-dropdown .rz-dropdown-item:hover {
            background-color: rgba(var(--rz-primary-rgb), 0.1) !important;
        }

        .compact-input.readonly {
            background-color: rgba(var(--rz-primary-rgb), 0.05) !important;
            color: var(--rz-text-color) !important;
            font-weight: 500 !important;
            cursor: not-allowed;
        }

    .status-indicator {
        width: 100% !important;
        height: 32px !important;
        display: flex !important;
        align-items: center !important;
        justify-content: center !important;
        font-size: 0.75rem !important;
    }

    .info-alert, .warning-alert {
        padding: 0.5rem 0.75rem !important;
        border-radius: var(--rz-border-radius) !important;
    }

    .info-alert {
        background-color: rgba(var(--rz-info-rgb), 0.1) !important;
        border: 1px solid rgba(var(--rz-info-rgb), 0.3) !important;
    }

    .warning-alert {
        background-color: rgba(var(--rz-warning-rgb), 0.1) !important;
        border: 1px solid rgba(var(--rz-warning-rgb), 0.3) !important;
    }

    .alert-icon {
        font-size: 0.875rem !important;
        color: var(--rz-info) !important;
    }

    .warning-alert .alert-icon {
        color: var(--rz-warning) !important;
    }

    .alert-text {
        font-size: 0.7rem !important;
        margin: 0 !important;
        color: var(--rz-text-color) !important;
    }

    .dialog-button {
        font-size: 0.75rem !important;
        padding: 0.35rem 0.75rem !important;
        height: 30px !important;
    }

        .dialog-button.primary {
            background: var(--rz-primary) !important;
            border-color: var(--rz-primary) !important;
            color: white !important;
        }

            .dialog-button.primary:hover:not(:disabled) {
                opacity: 0.9;
                transform: translateY(-1px);
                box-shadow: var(--rz-shadow-2);
            }
</style>